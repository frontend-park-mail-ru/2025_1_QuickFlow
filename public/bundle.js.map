{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAyD;;AAEzD;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,sBAAsB,mEAAa;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA,iCAAiC;AACjC;AACA,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;AACb,UAAU;AACV,YAAY,mEAAa;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;AClFyD;;AAEzD;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA;AACA,gCAAgC,kCAAkC;AAClE;AACA,gCAAgC,0CAA0C;AAC1E;AACA,SAAS;;AAET,wDAAwD,8BAA8B;AACtF,+BAA+B,mEAAa;AAC5C;AACA;AACA,wBAAwB;AACxB,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA,wBAAwB,oBAAoB,KAAK;AACjD,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;AClDuE;AACS;AACvB;;;AAGzD;;;AAGe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,qBAAqB,mEAAa;AAClC;AACA;AACA,oBAAoB;AACpB,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,8EAAe;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,oFAAkB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;AC1DyC;AAC2B;AACe;AACf;AACN;AACL;AACD;;;AAGzC;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,YAAY,4EAAc;AAC1B;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,QAAQ,wDAAI;AACZ,8BAA8B,iEAAS,iBAAiB;AACxD;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,2EAAe;AAC/B;AACA;AACA,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA;AACA,aAAa;;AAEb,gBAAgB,qFAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qBAAqB;AACrB;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qBAAqB;AACrB;AACA;AACA;AACA;AACA,0CAA0C,uEAAU;AACpD,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClIyC;AAC2B;AACG;AACd;AACN;;AAEpC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET;AACA,YAAY,mEAAa;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb;;AAEA,QAAQ,mEAAa;AACrB;AACA;AACA,oBAAoB;AACpB,SAAS;;AAET,QAAQ,oEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,oEAAa;AACrB;AACA;AACA,yEAAyE,2BAA2B,GAAG,sCAAsC;AAC7I;AACA,SAAS;AACT;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,+BAA+B,8EAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,gBAAgB,8EAAe;AAC/B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA,iCAAiC,mEAAa;AAC9C;AACA;AACA;AACA,SAAS;;AAET,iCAAiC,4EAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,gEAAU;;AAElB,gCAAgC,mEAAa;AAC7C;AACA;AACA,SAAS;;AAET,QAAQ,oEAAa;AACrB;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;;AAET,QAAQ,oEAAa;AACrB;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,4EAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,gEAAU;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;ACjPyD;;AAE1C;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,mEAAa;AACtC;AACA,gDAAgD,kBAAkB;AAClE,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mEAAa;AAChC;AACA;AACA,SAAS;;AAET,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET,oBAAoB,mEAAa;AACjC;AACA;AACA,SAAS;;AAET,qBAAqB,mEAAa;AAClC;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,oBAAoB,mEAAa;AACjC;AACA;AACA,SAAS;;AAET,qBAAqB,mEAAa;AAClC;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;AClFyD;;;AAG1C;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA;AACA,SAAS;;AAET;;AAEA,2DAA2D,kBAAkB;AAC7E,gCAAgC,mEAAa;AAC7C;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA,wBAAwB,oBAAoB,KAAK;AACjD,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,mEAAa;AACrC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA,oBAAoB;AACpB,SAAS;;AAET;AACA;AACA;;;;;;;;;;;;;;;;;;AC5HoE;AACG;AACd;;;AAGzD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET,sBAAsB,mEAAa;AACnC;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,mEAAa;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,YAAY,2EAAe;AAC3B;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,YAAY,8EAAe;AAC3B;AACA;AACA;AACA,SAAS;;AAET,YAAY,8EAAe;AAC3B;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,oBAAoB,mEAAa;AACjC;AACA;AACA,SAAS;;AAET,YAAY,2EAAe;AAC3B;AACA;AACA,SAAS;;AAET,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,2EAA2E,qCAAqC,EAAE,mCAAmC;AACrJ,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,wBAAwB,mEAAa;AACrC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sBAAsB,OAAO,GAAG,MAAM,GAAG,sBAAsB;AAC/D;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/K+C;AACmC;AACe;AACxC;AACN;AAC4B;;;AAG/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,mEAAa;AACrC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;AACT;;AAEA;AACA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET,YAAY,sFAAe;AAC3B;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,YAAY,gGAAoB;AAChC;AACA,SAAS;AACT;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,YAAY,gGAAoB;AAChC;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,sBAAsB,iEAAS;AAC/B,iCAAiC,2BAA2B,GAAG,wBAAwB;AACvF;AACA;;AAEA,yBAAyB,mEAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,QAAQ,gEAAU;;AAElB,wBAAwB,mEAAa;AACrC;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,gBAAgB,iEAAS;AACzB,yCAAyC,2BAA2B,GAAG,wBAAwB;AAC/F;AACA;AACA;AACA;AACA,YAAY,oEAAY,sBAAsB,2BAA2B,GAAG,wBAAwB;AACpG;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,yDAAa;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjRkF;AACG;AACH;AACzB;AACsB;;;AAG/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,YAAY,wFAAgB;AAC5B;AACA;AACA;AACA;AACA,gBAAgB,iEAAS;AACzB,aAAa;AACb,SAAS;;AAET,+BAA+B,iEAAS,wBAAwB,cAAc;AAC9E;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,mEAAa;AACnC;AACA;AACA,SAAS;;AAET;AACA,iCAAiC,iEAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,oEAAY;AACpB;;AAEA;AACA,qBAAqB,mEAAa;AAClC;AACA;AACA,oBAAoB,oCAAoC;AACxD,SAAS;;AAET;AACA;AACA;;AAEA;AACA,YAAY,iEAAS;AACrB;AACA;AACA,SAAS;;AAET,YAAY,sFAAe;AAC3B;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,oBAAoB,yCAAyC;AAC7D,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,iEAAS;AAC/B,iCAAiC,2BAA2B,GAAG,kBAAkB;AACjF;AACA;AACA;AACA;AACA,YAAY,mEAAa;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;AACT;;AAEA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET,6BAA6B,mEAAa;AAC1C;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,YAAY,uFAAc;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;AC7MyC;AACkB;AACA;AACF;;;AAG1C;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,mEAAa;AAC9C;AACA;AACA,SAAS;;AAET,+BAA+B,+DAAmB;AAClD;AACA;AACA,SAAS;AACT,+BAA+B,+DAAmB;AAClD;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,QAAQ,wDAAI;AACZ;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChEkF;AACd;AACX;AACA;;;AAGzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET;AACA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,iBAAiB;AACjB,gBAAgB,mEAAa;AAC7B;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,yBAAyB,iBAAiB,GAAG,UAAU;AACvD,aAAa;;AAEb,4BAA4B,mEAAa;AACzC;AACA;AACA,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA,wBAAwB;AACxB,aAAa;;AAEb,4BAA4B,mEAAa;AACzC;AACA;AACA,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA,wBAAwB;AACxB,aAAa;;AAEb;AACA;AACA;AACA,4DAA4D,6BAA6B;AACzF,6CAA6C,iBAAiB,GAAG,UAAU;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4DAA4D,6BAA6B;AACzF,6CAA6C,iBAAiB,GAAG,UAAU;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET;AACA,kCAAkC,mEAAa;AAC/C;AACA;AACA,aAAa;AACb,YAAY,mEAAa;AACzB;AACA,mCAAmC,IAAI;AACvC,aAAa;AACb,YAAY,mEAAa;AACzB;AACA;AACA,sCAAsC,IAAI;AAC1C,aAAa;AACb;;AAEA,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;AACT;;AAEA;AACA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,YAAY,2EAAe;AAC3B;AACA;AACA,SAAS;;AAET,gCAAgC,mEAAa;AAC7C;AACA;AACA,SAAS;;AAET,gCAAgC,mEAAa;AAC7C;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,qBAAqB,wBAAwB,EAAE,sBAAsB;AACrE,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,qBAAqB,mEAAa,0BAA0B;AAC5D,SAAS;;AAET;AACA,oBAAoB;AACpB,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,YAAY,qFAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;AC1SoE;AACX;;;AAGzD;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;AACT;AACA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,YAAY,2EAAe;AAC3B;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,qBAAqB,yCAAyC,EAAE,uCAAuC;AACvG,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,qBAAqB,gBAAgB,EAAE,uCAAuC;AAC9E,SAAS;;AAET,0BAA0B,mEAAa;AACvC;AACA;AACA,SAAS;;AAET,gEAAgE,kBAAkB;AAClF,6BAA6B,mEAAa;AAC1C;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,YAAY,mEAAa;AACzB;AACA,wBAAwB,oBAAoB,KAAK;AACjD,aAAa;AACb,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;;;;;AC/EyD;;AAE1C;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET,4DAA4D,OAAO;AACnE,6BAA6B,mEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzDyD;;;AAG1C;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;;AAEnD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;AC9DyC;AAC2B;AACA;AACG;AACd;AACN;AACE;AAC4B;;;AAGjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,oEAAY;AAC5B,gBAAgB,oEAAY;AAC5B,gBAAgB,oEAAY;AAC5B,gBAAgB,oEAAY;AAC5B,gBAAgB,oEAAY;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,YAAY,mEAAa;AACzB;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;;AAEA,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,+BAA+B,8EAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,qCAAqC,mEAAa;AAClD;AACA;AACA;AACA,SAAS;;AAET,iCAAiC,4EAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAS;AAC5B,SAAS;AACT,QAAQ,gEAAU;;AAElB,iCAAiC,mEAAa;AAC9C;AACA;AACA,SAAS;;AAET,kCAAkC,4EAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAS;AAC5B,SAAS;;AAET,iCAAiC,4EAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAS;AAC5B,SAAS;;AAET,4BAA4B,4EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,iCAAiC,iEAAS;;AAE1C,kCAAkC,4EAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAS;AAC5B,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,iCAAiC,4EAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,gEAAU;;AAElB,6CAA6C,4EAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,iEAAS;AACjB,QAAQ,iEAAS;AACjB,QAAQ,iEAAS;AACjB,QAAQ,iEAAS;AACjB,QAAQ,iEAAS;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iEAAW;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;ACtT4D;;;AAG5D;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,mEAAa;AAC1C;AACA;AACA,qBAAqB,yCAAyC;AAC9D;AACA;AACA,0BAA0B,qBAAqB;AAC/C,0BAA0B,wCAAwC;AAClE;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AChE4D;;;AAG5D;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChIgE;AACJ;;;AAG5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET;AACA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,mEAAa,GAAG;AAChC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,mEAAa;AAC1C;AACA;AACA,SAAS;;AAET;AACA,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,qBAAqB,mEAAa;AAClC;AACA,SAAS;;AAET;AACA,+BAA+B,mEAAa;AAC5C;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE,gCAAgC,mEAAa;AAC7C;AACA;AACA,aAAa;;AAEb;AACA,gBAAgB,mEAAa;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,gCAAgC,mEAAa;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,iDAAiD,qEAAe;AAChE;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D,EAAE;;AAEjE;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA,qEAAqE;;AAErE;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,6EAA6E,EAAE;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnToE;AACM;AACd;AACJ;AACqB;AACjC;AACiC;;;AAG9D;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET,qBAAqB,mEAAa;AAClC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;AACT,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,oBAAoB,uCAAuC;AAC3D,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,6BAA6B,iFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,6BAA6B,+EAAiB;AAC9C;AACA,SAAS;;AAET,YAAY,2EAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,mCAAmC,mEAAa;AAChD;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,sBAAsB,mEAAa;AACnC;AACA;AACA,SAAS;;AAET;AACA;AACA,YAAY,gFAAiB;AAC7B;AACA;AACA;AACA;AACA,YAAY,gFAAiB;AAC7B,YAAY,iEAAW;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gDAAgD,gFAAiB;AACjE;AACA;AACA;;;;;;;;;;;;;;;;ACtN4D;;;AAG5D;;;AAGe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,gBAAgB,mEAAa;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET;AACA;;AAEA,2BAA2B,mEAAa;AACxC;AACA;AACA,aAAa;;AAEb,0BAA0B,mEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;;AAEA,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yEAAyE,MAAM;AAC/E;AACA;AACA;;;;;;;;;;;;;;;;AChH4D;;;AAG5D;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,YAAY,mEAAa;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,wBAAwB,mEAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EyC;;AAEkD;AACG;AACZ;AACG;AACH;AACH;AACe;;AAErC;AACkC;AACnC;AACH;AACY;;;AAGjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,8FAAmB;AACpD;AACA,SAAS;;AAET,YAAY,4FAAkB;AAC9B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wDAAI;AACZ,8BAA8B,kEAAS,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,qBAAqB,mEAAa;AAClC;AACA;AACA;AACA,SAAS;;AAET;AACA,YAAY,mEAAa;AACzB;AACA;AACA;AACA,aAAa;AACb;;AAEA,2BAA2B,mEAAa;AACxC;AACA;AACA,SAAS;;AAET,wBAAwB,mBAAmB;AAC3C;;AAEA,oCAAoC,mEAAa;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,kEAAW;AACpD;;AAEA;AACA;AACA,wBAAwB,6FAAiB;AACzC,wBAAwB,uFAAc;AACtC;AACA;AACA;AACA;AACA,gBAAgB,mEAAa;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,yFAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,uCAAuC,aAAa;AACpD,+CAA+C,kEAAW;AAC1D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,wEAAiB;;AAEpC,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,0BAA0B,oFAAc;AACxC;AACA;AACA,SAAS;;AAET;;AAEA,2BAA2B,sFAAe;AAC1C;AACA;AACA;AACA,SAAS;;AAET;AACA,gBAAgB,+FAAkB;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3WyC;AACmC;AACwB;AACN;AACH;AAClC;;;AAGzD;;;AAGe;AACf;AACA;AACA;;AAEA;AACA,iCAAiC,8FAAmB;AACpD;AACA,SAAS;;AAET,YAAY,4FAAkB;AAC9B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET,8BAA8B,mEAAa;AAC3C;AACA;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,6BAA6B,mEAAa;AAC1C;AACA;AACA,SAAS;;AAET;AACA,gBAAgB,mGAAoB;AACpC;AACA,aAAa;AACb,SAAS;;AAET,QAAQ,wDAAI;AACZ;AACA,sBAAsB,0BAA0B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,kFAAa;AACzC,qBAAqB;AACrB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,2BAA2B,cAAc;;AAEzC;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA,0DAA0D,qCAAqC;AAC/F,6BAA6B;AAC7B;AACA;AACA;AACA,oBAAoB;AACpB;AACA,YAAY;;AAEZ;AACA;AACA;;;;;;;;;;;;;;;;;AC/G2F;AAClC;;;AAG1C;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,mEAAa,GAAG;AAC3C,YAAY,4FAAkB;;AAE9B;AACA;AACA;;;;;;;;;;;;;;;;;AClByC;AACgB;;;AAG1C;AACf;AACA;AACA;;AAEA;AACA,QAAQ,wDAAI;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,eAAe,mEAAa,GAAG;AAC/B;AACA;;;;;;;;;;;;;;;;;;;ACpByC;AACkD;AACG;AACtC;;;AAGzC;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,8FAAmB;AACpD;AACA,SAAS;;AAET,QAAQ,wDAAI;AACZ,8BAA8B,iEAAS,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4FAAkB;AACtC;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCyC;AAC2B;AACQ;AACkB;AACZ;AACkB;AACf;AAC5B;AACT;AACQ;AACuB;;;AAG/E;;AAEO;AACP,eAAe,WAAW;AAC1B,iBAAiB,aAAa;;AAE9B,WAAW,iBAAiB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,cAAc;;AAE1B,kBAAkB,iBAAiB;AACnC,kBAAkB,gBAAgB;;AAElC,gBAAgB,iBAAiB;AACjC,gBAAgB,gBAAgB;AAChC,cAAc,gBAAgB;AAC9B,gBAAgB,gBAAgB;;AAEhC,cAAc,eAAe;AAC7B,kBAAkB,oBAAoB;AACtC,iBAAiB,iBAAiB;;AAElC;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,8FAAmB;AACpD;AACA,SAAS;;AAET,QAAQ,wDAAI;AACZ,8BAA8B,iEAAS,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA,wBAAwB,qDAAc,EAAE;AACxC;;AAEA;AACA;;AAEA;AACA,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,oBAAoB,mEAAa;AACjC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;;AAET,+BAA+B,mEAAa;AAC5C;AACA;AACA,SAAS;;AAET,2BAA2B,cAAc;AACzC,2BAA2B,mEAAa;AACxC;AACA;AACA,aAAa;;AAEb,gBAAgB,sFAAe;AAC/B;AACA;AACA,aAAa;;AAEb,YAAY,mEAAa;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET;AACA,gBAAgB,mGAAoB;AACpC;AACA,aAAa;AACb,SAAS;;AAET,QAAQ,wDAAI;AACZ;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,mEAAa;AAC1C;AACA;AACA,SAAS;;AAET;AACA;AACA,oBAAoB,kFAAa;AACjC,aAAa;AACb;AACA;;AAEA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,YAAY,qFAAc;AAC1B;AACA;AACA,SAAS;;AAET,YAAY,sFAAe;AAC3B;AACA;AACA;AACA;AACA,SAAS;;AAET,8BAA8B,mEAAa;AAC3C;AACA;AACA,SAAS;;AAET,4BAA4B,mEAAa;AACzC;AACA;AACA,SAAS;;AAET,QAAQ,mEAAa;AACrB;AACA,qBAAqB,wBAAwB,EAAE,sBAAsB;AACrE;AACA,SAAS;;AAET,yBAAyB,mEAAa;AACtC;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA,gBAAgB,mGAAoB;AACpC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET,+BAA+B,mEAAa,GAAG,uBAAuB;;AAEtE,YAAY,yFAAe;AAC3B;AACA;AACA;AACA,+BAA+B,2EAAe;AAC9C,SAAS;AACT;;AAEA;AACA,qBAAqB,mEAAa;AAClC;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,qBAAqB,mEAAa;AAClC;AACA;AACA,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,oBAAoB,oBAAoB,KAAK;AAC7C,SAAS;AACT,QAAQ,mEAAa;AACrB;AACA;AACA,SAAS;;AAET;AACA;AACA;;;;;;;;;;;;;;;;;ACjR8F;AACrC;;;AAG1C;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,mEAAa,GAAG;AAC3C,YAAY,8FAAmB;;AAE/B;AACA;AACA;;;;;;;;;;;;AClBA;;;;;;;;;;;;;;;;;;;ACAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7VoD;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA,2BAA2B,aAAa;AACxC;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA,8BAA8B,4CAAK;AACnC;AACA,cAAc;AACd,8BAA8B,4CAAK;AACnC;AACA,cAAc;AACd,8BAA8B,+CAAQ;AACtC;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,gBAAgB,uBAAuB;AACvD;AACA;AACA;;AAEA;AACA,+BAA+B,aAAa,EAAE,IAAI,EAAE,kBAAkB,YAAY,OAAO;AACzF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA,iBAAiB,cAAc,2CAA2C;AAC1E;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,aAAa,EAAE,IAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;ACjIV;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,GAAG,MAAM,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA,cAAc,IAAI,GAAG,MAAM,GAAG,KAAK;AACnC;;;;;;;;;;;;;;ACde;AACf;;AAEA;AACA,uCAAuC,QAAQ,GAAG,IAAI;AACtD;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;;ACbe;AACf;AACA,cAAc;AACd;AACA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACvBe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACZe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACfe;AACf;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,QAAQ,0BAA0B;AACnE;;AAEA;AACA;AACA,kBAAkB,eAAe,OAAO,0BAA0B;AAClE;;AAEA;AACA;AACA,sDAAsD,aAAa;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;;AAEA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC/CO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;;;;;;UC1BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNuD;AACG;AACN;AACe;AACN;AACiB;AACN;AACnB;AAChB;AACf;;;AAGtB;;AAEA,kBAAkB,mEAAa;AAC/B;AACA;AACA,CAAC;;AAED,mEAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yEAAW;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,mEAAQ;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,qEAAS;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,uEAAU;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,6EAAa;AAC3C,SAAS;AACT,KAAK;AACL;AACA;;AAEA,iBAAiB,kFAAa;AAC9B,mBAAmB,sFAAe;;AAElC,wDAAI;AACJ;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC","sources":["webpack://QuickFlow/./public/Components/AvatarComponent/AvatarComponent.js","webpack://QuickFlow/./public/Components/ContextMenuComponent/ContextMenuComponent.js","webpack://QuickFlow/./public/Components/CoverComponent/CoverComponent.js","webpack://QuickFlow/./public/Components/HeaderComponent/HeaderComponent.js","webpack://QuickFlow/./public/Components/LoginFormComponent/LoginFormComponent.js","webpack://QuickFlow/./public/Components/MainLayoutComponent/MainLayoutComponent.js","webpack://QuickFlow/./public/Components/MenuComponent/MenuComponent.js","webpack://QuickFlow/./public/Components/MessengerComponent/ChatComponent.js","webpack://QuickFlow/./public/Components/MessengerComponent/ChatWindowComponent.js","webpack://QuickFlow/./public/Components/MessengerComponent/ChatsPanelComponent.js","webpack://QuickFlow/./public/Components/MessengerComponent/MessengerComponent.js","webpack://QuickFlow/./public/Components/PostComponent/PostComponent.js","webpack://QuickFlow/./public/Components/ProfileMenuComponent/ProfileMenuComponent.js","webpack://QuickFlow/./public/Components/RadioMenuComponent/RadioMenuComponent.js","webpack://QuickFlow/./public/Components/ResizerComponent/ResizerComponent.js","webpack://QuickFlow/./public/Components/SignupFormComponent/SignupFormComponent.js","webpack://QuickFlow/./public/Components/UI/ButtonComponent/ButtonComponent.js","webpack://QuickFlow/./public/Components/UI/FileInputComponent/FileInputComponent.js","webpack://QuickFlow/./public/Components/UI/InputComponent/InputComponent.js","webpack://QuickFlow/./public/Components/UI/ModalWindowComponent/ModalWindowComponent.js","webpack://QuickFlow/./public/Components/UI/RadioComponent/RadioComponent.js","webpack://QuickFlow/./public/Components/UI/TextareaComponent/TextareaComponent.js","webpack://QuickFlow/./public/Views/EditProfileView/EditProfileView.js","webpack://QuickFlow/./public/Views/FeedView/FeedView.js","webpack://QuickFlow/./public/Views/LoginView/LoginView.js","webpack://QuickFlow/./public/Views/LogoutView/LogoutView.js","webpack://QuickFlow/./public/Views/MessengerView/MessengerView.js","webpack://QuickFlow/./public/Views/ProfileView/ProfileView.js","webpack://QuickFlow/./public/Views/SignupView/SignupView.js","webpack://QuickFlow/./public/index.scss","webpack://QuickFlow/./public/mocks.js","webpack://QuickFlow/./public/modules/ajax.js","webpack://QuickFlow/./public/utils/convertDate.js","webpack://QuickFlow/./public/utils/convertToFormData.js","webpack://QuickFlow/./public/utils/createElement.js","webpack://QuickFlow/./public/utils/focusInput.js","webpack://QuickFlow/./public/utils/formatDateInput.js","webpack://QuickFlow/./public/utils/formatTimeAgo.js","webpack://QuickFlow/./public/utils/localStorage.js","webpack://QuickFlow/webpack/bootstrap","webpack://QuickFlow/webpack/runtime/define property getters","webpack://QuickFlow/webpack/runtime/hasOwnProperty shorthand","webpack://QuickFlow/webpack/runtime/make namespace object","webpack://QuickFlow/./public/index.js"],"sourcesContent":["import createElement from '../../utils/createElement.js';\n\nconst SIZE_PREFIX = 'avatar_';\nconst DEFAULT_SIZE_CLASS = SIZE_PREFIX + 'm';\nconst DEFAULT_SRC = 'static/img/default-avatar.jpg';\n\nexport default class AvatarComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.wrapper = null;\n        this.avatar = null;\n\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: [\n                'avatar',\n                SIZE_PREFIX + this.#config.size || DEFAULT_SIZE_CLASS\n            ]\n        });\n        if (this.#config.class) {\n            this.wrapper.classList.add(this.#config.class);\n        }\n\n        this.avatar = createElement({\n            parent: this.wrapper,\n            attrs: {\n                src: this.#config.src || DEFAULT_SRC,\n                alt: 'Аватар',\n                title: 'Аватар',\n            },\n            classes: ['avatar__image']\n        });\n\n        if (this.#config.type === 'status') {\n            this.renderStatus();\n        } else if (this.#config.type === 'edit') {\n            this.renderEdit();\n        }\n    }\n\n    renderEdit() {\n        this.wrapper.classList.add('avatar_edit');\n\n        const shadow = createElement({\n            parent: this.wrapper,\n            classes: ['avatar__overlay']\n        });\n\n        createElement({\n            parent: shadow,\n            attrs: {\n                src: '/static/img/camera-icon.svg',\n                alt: 'Редактировать',\n                title: 'Редактировать',\n            },\n            classes: ['avatar__edit-icon']\n        });\n    }\n\n    renderStatus() {\n        const status = 'online'; // TODO: получать данные запросом\n        if (status === 'online') {\n            createElement({\n                parent: this.wrapper,\n                classes: ['avatar__status_online']\n            });\n        } else {\n            createElement({\n                parent: this.wrapper,\n                classes: ['avatar__status_offline'],\n                text: this.#config.status\n            });\n        }\n    }\n}\n","import createElement from '../../utils/createElement.js';\n\nconst DEFAULT_IS_CRITICAL = false;\nconst DEFAULT_POSITION = 'below-end';\nconst DEFAULT_SIZE = 'default';\n\nexport default class ContextMenuComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: [\n                'context-menu',\n                `context-menu_${this.#config.size || DEFAULT_SIZE}`,\n                this.#config.classes,\n                `context-menu_${this.#config.position || DEFAULT_POSITION}`\n            ]\n        });\n\n        Object.entries(this.#config.data).forEach(([, { href, text, icon, isCritical }],) => {\n            const menuOption = createElement({\n                parent: this.wrapper,\n                classes: ['context-menu__option'],\n                attrs: {'data-href': href}\n            });\n\n            createElement({\n                parent: menuOption,\n                classes: ['context-menu__icon'],\n                attrs: {src: `/static/img/${icon}.svg`}\n            });\n\n            createElement({\n                parent: menuOption,\n                classes: [\n                    (isCritical || DEFAULT_IS_CRITICAL) ?\n                    'context-menu__text_critical' :\n                    'context-menu__text'\n                ],\n                text\n            });\n        });\n    }\n}\n","import ButtonComponent from '../UI/ButtonComponent/ButtonComponent.js';\nimport FileInputComponent from '../UI/FileInputComponent/FileInputComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nconst DEFAULT_SRC = 'static/img/default-cover.jpg';\n\n\nexport default class CoverComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.coverWrapper = null;\n        this.cover = null;\n        this.fileInput = null;\n\n        this.render();\n    }\n\n    render() {\n        this.coverWrapper = createElement({\n            parent: this.#parent,\n            classes: ['cover']\n        });\n\n        this.cover = createElement({\n            parent: this.coverWrapper,\n            classes: ['cover__img'],\n            attrs: {src: this.#config.src || DEFAULT_SRC}\n        });\n\n        switch (this.#config.type) {\n            case 'edit':\n                this.renderEdit();\n                break;\n        }\n    }\n\n    renderEdit() {\n        this.coverWrapper.classList.add('cover_edit');\n        \n        const coverUploadBtn = new ButtonComponent(this.coverWrapper, {\n            text: 'Изменить обложку',\n            variant: 'overlay',\n            size: 'small',\n            classes: ['cover__btn'],\n        });\n        \n        this.fileInput = new FileInputComponent(this.#parent.parentNode, {\n            imitator: coverUploadBtn.buttonElement,\n            preview: this.cover,\n            id: 'profile-cover-upload',\n            name: 'cover_url',\n        })\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport InputComponent from '../UI/InputComponent/InputComponent.js';\nimport ProfileMenuComponent from '../ProfileMenuComponent/ProfileMenuComponent.js';\nimport AvatarComponent from '../AvatarComponent/AvatarComponent.js';\nimport LogoutView from '../../Views/LogoutView/LogoutView.js';\nimport createElement from '../../utils/createElement.js';\nimport { getLsItem } from '../../utils/localStorage.js';\n\n\nexport default class HeaderComponent {\n    #parent\n    #menu\n    constructor(parent, menu) {\n        this.#parent = parent;\n        this.#menu = menu;\n\n        this.rightWrapper = null;\n\n        this.render();\n    }\n\n    render() {\n        const header = createElement({\n            tag: 'header',\n            parent: this.#parent,\n            classes: ['header']\n        });\n\n        this.wrapper = createElement({\n            parent: header,\n            classes: ['header__inner']\n        });\n        \n        this.renderActions();\n        this.renderAvatarMenu();\n    }\n\n    renderActions() {\n        const leftWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['header__left']\n        });\n\n        new InputComponent(leftWrapper, {\n            type: 'search',\n            placeholder: 'Поиск',\n            showRequired: false,\n            classes: ['header__search']\n        });\n\n        // const notificationsWrapper = document.createElement('a');\n        // notificationsWrapper.classList.add('icon-wrapper');\n        // const musicWrapper = document.createElement('a');\n        // musicWrapper.classList.add('icon-wrapper');\n\n        // const notificationsIcon = document.createElement('img');\n        // notificationsIcon.src = '/static/img/notice-icon.svg';\n\n        // const musicIcon = document.createElement('img');\n        // musicIcon.src = '/static/img/music-icon-top.svg';\n        \n        // notificationsWrapper.appendChild(notificationsIcon);\n        // musicWrapper.appendChild(musicIcon);\n\n        // wrapper.appendChild(notificationsWrapper);\n        // wrapper.appendChild(musicWrapper);\n    }\n\n    renderAvatarMenu() {\n        if (this.rightWrapper) this.rightWrapper.innerHTML = '';\n\n        this.rightWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['header__right']\n        });\n\n        Ajax.get({\n            url: `/profiles/${getLsItem('username', '')}`,\n            callback: (status, userData) => {\n                this.renderAvatarCallback(status, userData);\n            }\n        });\n    }\n\n    renderAvatarCallback(status, userData) {\n        let isAuthorized = status === 200;\n\n        if (!isAuthorized) {\n            this.#menu.goToPage(this.#menu.menuElements.login);\n            this.#menu.updateMenuVisibility(false);\n            return;\n        }\n\n        if (userData) {\n            new AvatarComponent(this.rightWrapper, {\n                size: 'xs',\n                src: userData.profile.avatar_url,\n            });\n\n            createElement({\n                tag: 'a',\n                parent: this.rightWrapper,\n                classes: ['header__dropdown-icon']\n            });\n\n            new ProfileMenuComponent(this.rightWrapper, {\n                userData,\n                menuItems: {\n                    settings: {\n                        href: '/settings',\n                        text: 'Настройки',\n                        icon: 'settings-icon',\n                        render: () => {},\n                    },\n                    help: {\n                        href: '/help',\n                        text: 'Помощь',\n                        icon: 'help-icon',\n                        render: () => {},\n                    },\n                    logout: {\n                        href: '/logout',\n                        text: 'Выйти',\n                        icon: 'logout-icon',\n                        render: () => new LogoutView(this.#menu).render(),\n                    },\n                },\n            });\n        }\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport InputComponent from '../UI/InputComponent/InputComponent.js';\nimport ButtonComponent from '../UI/ButtonComponent/ButtonComponent.js';\nimport createElement from '../../utils/createElement.js';\nimport focusInput from '../../utils/focusInput.js';\n\nexport default class LoginFormComponent {\n    #parent\n    #menu\n    #header\n    #focusTimer\n    constructor(parent, menu, header) {\n        this.#parent = parent;\n        this.#menu = menu;\n        this.#header = header;\n        \n        this.step = 1;\n        this.passwordInput = null;\n        this.usernameInput = null;\n        this.continueBtn = null;\n        this.#focusTimer = null;\n\n        this.config = {\n            usernameTitle: 'Вход QuickFlow',\n            pwdTitle: 'Введите пароль',\n            usernameDescription: 'Введите имя пользователя, которое привязано к вашему аккаунту',\n            pwdDescription: 'Введите ваш текущий пароль,\\r\\nпривязанный к ',\n            continueBtnText: 'Продолжить',\n            signupBtnText: 'Создать аккаунт',\n            signinBtnText: 'Войти'\n        };\n        this.render();\n    }\n\n    render() {\n        this.#parent.innerHTML = '';\n\n        const form = createElement({\n            tag: 'form',\n            parent: this.#parent,\n            classes: ['auth-form']\n        });\n\n        this.handleFormSubmission(form);\n\n        if (this.step === 1) {\n            this.renderUsernameStep(form);\n        } else if (this.step === 2) {\n            this.renderPasswordStep(form);\n        }\n    }\n\n    handleFormSubmission(form) {\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            if (this.step === 1) {\n                this.continueBtnOnClick();\n            } else {\n                if (this.passwordInput.input.classList.contains('invalid')) return;\n                this.signinBtnOnClick(event);\n            }\n        });\n    }\n\n    renderTopWrapper(form) {\n        const topWrapper = createElement({\n            parent: form,\n            classes: ['auth-form__top']\n        });\n\n        if (this.step === 2) {\n            createElement({\n                tag: 'a',\n                parent: topWrapper,\n                classes: ['auth-form__back-btn']\n            })\n            .addEventListener('click', () => {\n                if (this.step === 1) {\n                    localStorage.removeItem(\"username\");\n                    this.#menu.goToPage(this.#menu.menuElements.login);\n                } else {\n                    this.step = 1;\n                    this.render();\n                }\n            });\n        }\n\n        createElement({\n            parent: topWrapper,\n            classes: ['auth-form__logo'],\n            attrs: {src: '/static/img/logo-icon.svg'}\n        })\n\n        createElement({\n            tag: 'h1',\n            text: this.step === 1 ? this.config.usernameTitle : this.config.pwdTitle,\n            parent: topWrapper,\n        })\n\n        createElement({\n            tag: 'p',\n            classes: ['p1'],\n            text: this.step === 1 ? this.config.usernameDescription : `${this.config.pwdDescription}@${this.usernameInput.input.value.trim()}`,\n            parent: topWrapper,\n        })\n    }\n\n    renderBottomWrapper(form) {\n        const bottomWrapper = createElement({\n            parent: form,\n            classes: ['auth-form__bottom'],\n        })\n\n        this.continueBtn = new ButtonComponent(bottomWrapper, {\n            text: this.step === 1 ? this.config.continueBtnText : this.config.signinBtnText,\n            variant: 'primary',\n            onClick:\n                this.step === 1\n                    ? this.continueBtnOnClick.bind(this)\n                    : this.signinBtnOnClick.bind(this),\n            disabled: this.step === 1,\n            stateUpdaters:\n                this.step === 1\n                ? [this.usernameInput]\n                : [this.passwordInput]\n        });\n\n        if (this.step === 1) {\n            new ButtonComponent(bottomWrapper, {\n                text: this.config.signupBtnText,\n                variant: 'secondary',\n                onClick: () => {\n                    this.#menu.goToPage(this.#menu.menuElements.signup);\n                }\n            });\n        }\n    }\n\n    renderUsernameStep(form) {\n        this.renderTopWrapper(form);\n\n        const fieldsetUsername = createElement({\n            tag: 'fieldset',\n            parent: form,\n            classes: ['auth-form__username'],\n        })\n\n        this.usernameInput = new InputComponent(fieldsetUsername, {\n            type: 'text',\n            placeholder: 'Имя пользователя',\n            autocomplete: 'username',\n            required: true,\n            showRequired: false,\n            value: localStorage.getItem(\"username\") || ''\n        });\n        focusInput(this.usernameInput.input, this.#focusTimer);\n\n        const checkboxWrapper = createElement({\n            parent: form,\n            classes: ['auth-form__checkboxes'],\n        })\n\n        createElement({\n            tag: 'input',\n            parent: checkboxWrapper,\n            classes: ['auth-form__checkbox'],\n            attrs: {type: 'checkbox', id:'rememberMe'}\n        })\n\n        createElement({\n            tag: 'label',\n            parent: checkboxWrapper,\n            attrs: {htmlFor: 'rememberMe'},\n            text: 'Запомнить меня'\n        })\n\n        this.renderBottomWrapper(form);\n    }\n\n    updateBtnState() {\n        let disabled;\n        if (this.step === 1) {\n            disabled = this.usernameInput.input.classList.contains('invalid') || this.usernameInput.input.value === '';\n        } else {\n            disabled = this.passwordInput.input.classList.contains('invalid') || this.passwordInput.input.value === '';\n        }\n        this.continueBtn.buttonElement.disabled = disabled;\n    }\n\n    renderPasswordStep(form) {\n        this.renderTopWrapper(form);\n\n        this.passwordInput = new InputComponent(form, {\n            type: 'password',\n            placeholder: 'Пароль',\n            autocomplete: 'password',\n            required: true,\n            showRequired: false\n        });\n        focusInput(this.passwordInput.input, this.#focusTimer);\n\n        this.renderBottomWrapper(form);\n    }\n\n    continueBtnOnClick() {\n        localStorage.setItem(\"username\", this.usernameInput.input.value.trim());\n        this.step = 2;\n        this.render();\n    }\n\n    signinBtnOnClick(event) {\n        event.preventDefault();\n        const password = this.passwordInput.input.value.trim();\n        this.submitLogin(password);\n    }\n\n    submitLogin(password) {\n        const body = {\n            username: this.usernameInput.input.value.trim(),\n            password\n        };\n        Ajax.post({\n            url: '/login',\n            body,\n            callback: (status) => {\n                if (status === 200) {\n                    this.#menu.goToPage(this.#menu.menuElements.feed);\n                    this.#menu.checkAuthPage();\n                    this.#menu.updateMenuVisibility(true);\n                    this.#header.renderAvatarMenu();\n                    return;\n                }\n                this.passwordInput.showError('Неверное имя пользователя или пароль');\n                this.passwordInput.addListener(() => {\n                    this.passwordInput.hideError();\n                    this.updateBtnState();\n                });\n                this.updateBtnState();\n            }\n        });\n    }\n}\n","import createElement from '../../utils/createElement.js';\n\nexport default class MainLayoutComponent {\n    #parent\n    #config\n    constructor(config) {\n        this.#parent = document.querySelector('main');\n        this.#config = config;\n\n        this.container = null;\n        this.top = null;\n        this.left = null;\n        this.right = null;\n\n        this.render();\n    }\n\n    render() {\n        this.container = createElement({\n            parent: this.#parent,\n            classes: ['container', `container_${this.#config.type}`],\n        });\n\n        switch (this.#config.type) {\n            case 'feed':\n                this.renderFeed();\n                break;\n            case 'profile': \n                this.renderProfile();\n                break;\n            case 'messenger': \n                this.renderMessenger();\n                break;\n        }\n    }\n\n    clear() {\n        this.container.innerHTML = '';\n        this.#parent.removeChild(this.container);\n    }\n\n    renderMessenger() {\n        this.#parent.style.position = 'fixed';\n    }\n\n    renderProfile() {\n        this.#parent.style.position = 'absolute';\n\n        this.top = createElement({\n            parent: this.container,\n            classes: ['container__row'],\n        });\n\n        const bottomRow = createElement({\n            parent: this.container,\n            classes: ['container__row'],\n        });\n\n        this.left = createElement({\n            parent: bottomRow,\n            classes: ['container__column', 'container__column_left'],\n        });\n\n        this.right = createElement({\n            parent: bottomRow,\n            classes: ['container__column', 'container__column_right'],\n        });\n    }\n\n    renderFeed() {\n        this.#parent.style.position = 'absolute';\n        \n        this.left = createElement({\n            parent: this.container,\n            classes: ['container__column', 'container__column_left'],\n        });\n\n        this.right = createElement({\n            parent: this.container,\n            classes: ['container__column', 'container__column_right'],\n        });\n    }\n}\n","import createElement from '../../utils/createElement.js';\n\n\nexport default class MenuComponent {\n    #config\n    #parent\n    #container\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.#container = null;\n        this.activePageLink = null;\n        this.menuElements = {};\n\n        this.render();\n    }\n\n    render() {\n        this.#container = createElement({\n            tag: 'aside',\n            parent: this.#parent,\n            classes: ['menu'],\n        });\n\n        new LogoComponent(this.#container, this).render();\n\n        Object.entries(this.#config.menu).forEach(([key, { href, text, icon }], index) => {\n            const menuElement = createElement({\n                tag: 'a',\n                parent: this.#container,\n                classes: ['menu__item'],\n                attrs: {href, 'data-section': key}\n            });\n\n            createElement({\n                parent: menuElement,\n                classes: ['menu__icon'],\n                attrs: {src: `/static/img/${icon}.svg`}\n            });\n\n            createElement({\n                parent: menuElement,\n                text\n            });\n\n            if (index === 0) {\n                menuElement.classList.add('menu__item_active');\n                this.activePageLink = menuElement;\n            }\n\n            this.menuElements[key] = menuElement;\n        });\n\n        this.updateMenuVisibility();\n\n        this.#container.addEventListener('click', (event) => {\n            if (event.target.closest('a')) {\n                event.preventDefault();\n                this.goToPage(event.target.closest('a'));\n                this.checkAuthPage();\n            }\n        });\n    }\n\n    updateMenuVisibility() {\n        if (this.#config.isAuthorized) {\n            this.menuElements.login.classList.add('hidden');\n            this.menuElements.signup.classList.add('hidden');\n            return;\n        }\n        this.menuElements.login.classList.remove('hidden');\n        this.menuElements.signup.classList.remove('hidden');\n    }\n\n    checkAuthPage() {\n        const path = this.activePageLink.href;\n        const href = path.substr(path.lastIndexOf('/') + 1);\n        if (href === 'login' || href === 'signup') {\n            this.#parent.classList.add(\"container_auth\");\n            return;\n        }\n        this.#parent.classList.remove(\"container_auth\");\n    }\n\n    goToPage(menuElement) {\n        this.#parent.querySelector('main').innerHTML = '';\n        if (this.activePageLink) this.activePageLink.classList.remove('menu__item_active');\n\n        menuElement.classList.add('menu__item_active');\n        this.activePageLink = menuElement;\n\n        const section = menuElement.dataset.section;\n        if (this.#config.menu[section].render) {\n            const element = this.#config.menu[section].render();\n            this.#parent.querySelector('main').appendChild(element);\n        }\n\n        this.checkAuthPage();\n    }\n}\n\n\nexport class LogoComponent {\n    #parent\n    #menu\n    constructor(parent, menu) {\n        this.#parent = parent;\n        this.#menu = menu;\n    }\n\n    render() {\n        const wrapper = createElement({\n            parent: this.#parent,\n            classes: ['menu__logo'],\n        });\n\n        createElement({\n            parent: wrapper,\n            attrs: {src: '/static/img/annotated-logo.svg'}\n        });\n\n        wrapper.addEventListener('click', () => this.#menu.goToPage(this.#menu.menuElements.feed));\n    }\n}\n","import AvatarComponent from '../AvatarComponent/AvatarComponent.js';\nimport ButtonComponent from '../UI/ButtonComponent/ButtonComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nconst MSG_AVATAR_SIZE = 'xs';\nconst EMPTY_STATE_AVATAR_SIZE = 'xxl';\nconst EMPTY_STATE_BTN_SIZE = 'small';\nconst EMPTY_STATE_BTN_VARIANT = 'secondary';\nconst EMPTY_STATE_CALL_TO_ACTION_TEXT = 'Напишите или отправьте стикер';\nconst OPEN_PROFILE_BTN_TEXT = 'Открыть профиль';\nconst ADD_TO_FRIENDS_BTN_TEXT = 'Заявка отправлена';\n\n\nexport default class MessageComponent {\n    #parent\n    #config\n    #container\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.#container = null;\n        this.scroll = null;\n\n        this.render();\n    }\n\n    render() {\n        this.#container = createElement({\n            parent: this.#parent,\n            classes: ['chat'],\n        });\n\n        this.scroll = createElement({\n            parent: this.#container,\n            classes: ['chat__scroll'],\n        });\n\n        if (!this.#config.messages || !this.#config.messages.length) {\n            this.renderEmptyState();\n            return;\n        }\n\n        let prevMsg = {};\n        let prevDay = '';\n\n        for (const msg of this.#config.messages) {\n            const classes = [];\n\n            const curDay = this.formatDateTitle(msg.timestamp);\n            if (curDay !== prevDay) {\n                createElement({\n                    parent: this.scroll,\n                    text: prevDay === '' ? this.formatDateTitle(msg.timestamp) : curDay,\n                    classes: ['chat__date'],\n                });\n            } else {\n                if (msg.from === prevMsg.from) {\n                    classes.push('chat__msg_nameless');\n                }\n            }\n\n            this.renderMsg(msg, classes);\n\n            prevMsg = msg;\n            prevDay = this.formatDateTitle(msg.timestamp);\n        }\n    }\n\n    renderEmptyState() {\n        this.scroll.classList.add('chat__scroll_empty');\n\n        const infoWrapper = createElement({\n            parent: this.scroll,\n            classes: ['chat__profile']\n        });\n\n        new AvatarComponent(infoWrapper, {\n            size: EMPTY_STATE_AVATAR_SIZE,\n            src: this.#config.chatData.avatar,\n        });\n\n        createElement({\n            tag: 'h1',\n            parent: infoWrapper,\n            text: this.#config.chatData.name,\n        });\n        \n        createElement({\n            parent: infoWrapper,\n            text: EMPTY_STATE_CALL_TO_ACTION_TEXT,\n        });\n\n        const btnsWrapper = createElement({\n            parent: this.scroll,\n            classes: ['chat__buttons'],\n        });\n\n        new ButtonComponent(btnsWrapper, {\n            text: OPEN_PROFILE_BTN_TEXT,\n            variant: EMPTY_STATE_BTN_VARIANT,\n            size: EMPTY_STATE_BTN_SIZE,\n        });\n\n        new ButtonComponent(btnsWrapper, {\n            text: ADD_TO_FRIENDS_BTN_TEXT,\n            variant: EMPTY_STATE_BTN_VARIANT,\n            size: EMPTY_STATE_BTN_SIZE,\n        });\n    }\n\n    renderMsg(msgData, classes) {\n        const msg = createElement({\n            parent: this.scroll,\n            classes: ['chat__msg', ...classes],\n        });\n\n        new AvatarComponent(msg, {\n            size: MSG_AVATAR_SIZE,\n            src: msgData.from === this.#config.user.profile.username ? this.#config.user.profile.avatar_url : this.#config.chatData.avatar,\n        });\n\n        const msgContent = createElement({\n            parent: msg,\n            classes: ['chat__msg-content'],\n        });\n\n        createElement({\n            parent: msgContent,\n            classes: ['chat__sender'],\n            text: msgData.from === this.#config.user.profile.username ? `${this.#config.user.profile.firstname} ${this.#config.user.profile.lastname}` : this.#config.chatData.name,\n        });\n\n        createElement({\n            parent: msgContent,\n            text: msgData.text,\n        });\n\n        const msgInfo = createElement({\n            parent: msg,\n            classes: ['chat__msg-info'],\n        });\n\n        createElement({\n            parent: msgInfo,\n            classes: ['chat__msg-status', msgData.isRead ? 'chat__msg-status_read' : null],\n        });\n\n        createElement({\n            parent: msgInfo,\n            classes: ['chat__msg-ts'],\n            text: '17:20', // TODO: подтягивать\n        });\n    }\n\n    formatDateTitle(dateString) { // TODO: вынести в utils\n        const date = new Date(dateString);\n        const now = new Date();\n\n        const nowDay = now.getUTCDate();\n        const msgDay = date.getUTCDate();\n\n        if (nowDay - msgDay === 0) {\n            return 'Сегодня';\n        } else if (nowDay - msgDay === 1) {\n            return 'Вчера';\n        } else {\n            let month = date.getUTCMonth() + 1;\n            if (month < 10) {\n                month = '0' + month;\n            }\n            return `${msgDay}.${month}.${date.getUTCFullYear()}`;\n        }\n    }\n}","import ChatComponent from './ChatComponent.js';\nimport AvatarComponent from '../../Components/AvatarComponent/AvatarComponent.js';\nimport ContextMenuComponent from '../../Components/ContextMenuComponent/ContextMenuComponent.js';\nimport createElement from '../../utils/createElement.js';\nimport focusInput from '../../utils/focusInput.js';\nimport {setLsItem, getLsItem, removeLsItem} from '../../utils/localStorage.js';\n\n\nconst TEXTAREA_PLACEHOLDER = 'Напишите сообщение...';\nconst HEADER_AVATAR_SIZE = 'xs';\nconst EMPTY_CHAT_WINDOW_TEXT = 'Выберите чат или создайте новый';\nconst CHAT_DEFAULT_PADDING_BOTTOM = 16;\nconst CHAT_MSG_PREFIX = 'chat-msg-';\n\nconst HEADER_CONTEXT_MENU_DATA = {\n    disableNotify: {\n        href: '/disable-notify',\n        text: 'Выключить уведомления',\n        icon: 'bell-off-icon',\n    },\n    deleteHistory: {\n        href: '/delete-history',\n        text: 'Очистить историю',\n        icon: 'broom-icon',\n        isCritical: true\n    },\n    ban: {\n        href: '/ban',\n        text: 'Заблокировать',\n        icon: 'ban-icon',\n        isCritical: true\n    },\n};\n\nconst MEDIA_CONTEXT_MENU_DATA = {\n    photo: {\n        text: 'Фото',\n        icon: 'primary-photo-icon',\n    },\n    video: {\n        text: 'Видео',\n        icon: 'videocamera-icon',\n    },\n    music: {\n        text: 'Музыка',\n        icon: 'primary-music-icon',\n    },\n    file: {\n        text: 'Файл',\n        icon: 'file-icon',\n    },\n};\n\n\nexport default class ChatWindowComponent {\n    #parent\n    #config\n    #msgs\n    #chatElement\n    #chatData\n    #container\n    #chatsPanel\n    #focusTimer\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.#chatElement = null;\n        this.#chatData = null;\n        this.#msgs = null;\n        this.#container = null;\n        this.#chatsPanel = null;\n        this.#focusTimer = null;\n\n        this.render();\n    }\n\n    render() {\n        this.#container = createElement({\n            parent: this.#parent,\n            classes: ['chat-window'],\n        });\n\n        this.renderEmptyState();\n    }\n\n    get chatData() {\n        return this.#chatData;\n    }\n\n    set chatsPanel(chatsPanel) {\n        this.#chatsPanel = chatsPanel;\n    }\n\n    renderActiveChat(chatData) {\n        this.#chatData = chatData;\n        this.#container.innerHTML = '';\n\n        this.#config.messenger.ajaxGetChat(this.#chatData.username, (chatMsgs) => {\n            this.#msgs = chatMsgs;\n            this.renderHeader();\n            this.renderChat();\n            this.renderMessageInput();\n        });\n    }\n\n    close() {\n        this.#chatsPanel.close();\n        this.renderEmptyState();\n    }\n\n    renderEmptyState() {\n        this.#container.innerHTML = '';\n\n        const wrapper = createElement({\n            parent: this.#container,\n            classes: ['chat-window__empty'],\n        });\n\n        createElement({\n            parent: wrapper,\n            classes: ['chat-window__empty-icon'],\n        });\n\n        createElement({\n            parent: wrapper,\n            text: EMPTY_CHAT_WINDOW_TEXT,\n        });\n    }\n\n    renderHeader() {\n        const chatHeader = createElement({\n            parent: this.#container,\n            classes: ['chat-window__header'],\n        });\n\n        createElement({\n            tag: 'button',\n            parent: chatHeader,\n            classes: ['modal__close']\n        })\n        .addEventListener('click', () => {\n            this.close();\n        });\n\n        new AvatarComponent(chatHeader, {\n            size: HEADER_AVATAR_SIZE,\n            src: this.#chatData.avatar,\n        });\n\n        const chatInfo = createElement({\n            parent: chatHeader,\n            classes: ['chat-window__header-info'],\n        });\n\n        createElement({\n            parent: chatInfo,\n            classes: ['chat-window__title'],\n            text: this.#chatData.name,\n        });\n\n        createElement({\n            parent: chatInfo,\n            classes: ['chat-window__status'],\n            text: 'заходил 2 часа назад', // TODO: делать запрос на user и отображать статус\n        });\n\n        this.renderDropdown(chatHeader);\n    }\n\n    renderDropdown(parent) {\n        const dropdown = createElement({\n            classes: ['dropdown', 'chat-window__dropdown'],\n            parent,\n        });\n\n        const optionsWrapper = createElement({\n            classes: ['post-options-wrapper'],\n            parent: dropdown,\n        });\n\n        createElement({\n            classes: ['post-options'],\n            parent: optionsWrapper,\n        });\n\n        new ContextMenuComponent(dropdown, {\n            data: HEADER_CONTEXT_MENU_DATA,\n        });\n    }\n\n    renderMessageInput() {\n        const bottomWrapper = createElement({\n            classes: ['chat-window__bottom'],\n            parent: this.#container,\n        });\n\n        const bottomBar = createElement({\n            classes: ['chat-window__bottom-bar'],\n            parent: bottomWrapper,\n        });\n\n        const dropdown = createElement({\n            classes: ['dropdown', 'chat-window__media-dropdown'],\n            parent: bottomBar,\n        });\n\n        new ContextMenuComponent(dropdown, {\n            data: MEDIA_CONTEXT_MENU_DATA,\n            size: 'mini',\n            position: 'above-start',\n        });\n\n        createElement({\n            classes: ['chat-window__media'],\n            parent: dropdown,\n        });\n\n        const value = getLsItem(\n            CHAT_MSG_PREFIX + `${this.#config.user.username}-${this.#chatData.username}`,\n            ''\n        );\n\n        const textarea = createElement({\n            tag: 'textarea',\n            parent: bottomBar,\n            classes: ['chat-window__msg'],\n            attrs: {\n                placeholder: TEXTAREA_PLACEHOLDER,\n                rows: 1,\n            },\n            text: value\n        });\n        focusInput(textarea, this.#focusTimer);\n\n        const sendBtn = createElement({\n            classes: ['chat-window__send', textarea.value.trim() === '' ? 'chat-window__send_disabled' : null],\n            parent: bottomBar,\n        });\n\n        textarea.addEventListener(\"input\", () => {\n            if (textarea.value.trim() !== '') {\n                sendBtn.classList.remove('chat-window__send_disabled');\n                setLsItem(\n                    CHAT_MSG_PREFIX + `${this.#config.user.username}-${this.#chatData.username}`,\n                    textarea.value.trim()\n                );\n                return;\n            }\n            removeLsItem(CHAT_MSG_PREFIX + `${this.#config.user.username}-${this.#chatData.username}`);\n            this.#chatsPanel.renderLastMsg(this.#chatData);\n            sendBtn.classList.add('chat-window__send_disabled');\n        });\n\n        this.updateTextareaHeight(textarea, bottomWrapper);\n        textarea.addEventListener(\"input\", () => this.updateTextareaHeight(textarea, bottomWrapper));\n    }\n\n    updateTextareaHeight(textarea, bottomWrapper) {\n        textarea.style.height = 'auto';\n        textarea.style.height = (textarea.scrollHeight) + 'px';\n        this.#chatElement.style.paddingBottom = bottomWrapper.scrollHeight + CHAT_DEFAULT_PADDING_BOTTOM + 'px';\n        this.#chatElement.parentNode.scrollTop = this.#chatElement.parentNode.scrollHeight;\n    }\n\n    renderChat() {\n        this.#chatElement = new ChatComponent(this.#container, {\n            chatData: this.#chatData,\n            messages: this.#msgs,\n            user: this.#config.user,\n        })\n        .scroll;\n    }\n}","import AvatarComponent from '../../Components/AvatarComponent/AvatarComponent.js';\nimport ResizerComponent from '../../Components/ResizerComponent/ResizerComponent.js';\nimport InputComponent from '../../Components/UI/InputComponent/InputComponent.js';\nimport createElement from '../../utils/createElement.js';\nimport {setLsItem, getLsItem, removeLsItem} from '../../utils/localStorage.js';\n\n\nconst DEFAULT_WIDTH = 300;\nconst RESIZER_TO_DEFAULT_WIDTH = 200;\nconst RESIZER_TO_MINI_WIDTH = 96;\nconst CHATS_TITLE = 'Чаты';\nconst SEARCH_PLACEHOLDER = 'Поиск';\nconst CHAT_ITEM_AVATAR_SIZE = 'm';\nconst LAST_MSG_TIME_DIVIDER = '•';\nconst DRAFT_PREFIX_TEXT = 'Черновик:';\nconst CHAT_INFO_PREFIX = 'chat-info-';\nconst CHAT_MSG_PREFIX = 'chat-msg-';\nconst CHAT_PREFIX = 'chat-';\nconst CLASS_SIZE_MINI = 'chats-panel_mini';\n\n\nexport default class ChatsPanelComponent {\n    #parent\n    #chats\n    #config\n    #chatWindow\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n        \n        this.#chats = null;\n        this.#chatWindow = null;\n        this.container = null;\n        this.activeChatItem = null;\n        this.chatItems = [];\n        this.render();\n    }\n\n    render() {\n        this.container = createElement({\n            parent: this.#parent,\n            classes: ['chats-panel'],\n        });\n\n        new ResizerComponent(this.container, {\n            classMini: CLASS_SIZE_MINI,\n            toDefaultWidth: RESIZER_TO_DEFAULT_WIDTH,\n            toMiniWidth: RESIZER_TO_MINI_WIDTH,\n            onResized: (width) => {\n                setLsItem('chats-panel-size', width);\n            },\n        });\n\n        const chatsPanelSize = getLsItem('chats-panel-size', `${DEFAULT_WIDTH}px`);\n        if (chatsPanelSize === CLASS_SIZE_MINI) {\n            this.container.classList.add(chatsPanelSize);\n        } else {\n            this.container.style.width = chatsPanelSize;\n        }\n\n        this.renderSearchBar();\n        this.renderChatList();\n    }\n\n    set chatWindow(chatWindow) {\n        this.#chatWindow = chatWindow;\n    }\n\n    renderChatList() {\n        this.#chats = createElement({\n            parent: this.container,\n            classes: ['chats-panel__chats'],\n        });\n\n        this.#config.messenger.ajaxGetChats((chatsData) => {\n            const activeChatId = getLsItem('active-chat', null);\n                \n            for (const chatData of chatsData) {\n                const chatItem = this.renderChatItem(chatData);\n                this.chatItems.push(chatItem);\n                if (chatItem.id === activeChatId) {\n                    this.activeChatItem = chatItem;\n                    this.activeChatItem.classList.add('chats-panel__chat_active');\n                    this.#chatWindow.renderActiveChat(chatData);\n                }\n            }\n        });\n    }\n\n    close() {\n        if (!this.activeChatItem) return;\n\n        this.activeChatItem.classList.remove('chats-panel__chat_active');\n        this.activeChatItem = null;\n        this.renderLastMsg(this.#chatWindow.chatData);\n        removeLsItem('active-chat');\n    }\n\n    renderChatItem(chatData) {\n        const chat = createElement({\n            parent: this.#chats,\n            classes: ['chats-panel__chat'],\n            attrs: {id: CHAT_PREFIX + chatData.username},\n        });\n\n        chat.addEventListener('click', () => {\n            if (chat === this.activeChatItem) return;\n            this.close();\n\n            chat.classList.add('chats-panel__chat_active');\n            setLsItem('active-chat', CHAT_PREFIX + chatData.username);\n            this.activeChatItem = chat;\n            this.#chatWindow.renderActiveChat(chatData);\n        });\n\n        new AvatarComponent(chat, {\n            size: CHAT_ITEM_AVATAR_SIZE,\n            src: chatData.avatar,\n        });\n\n        const chatInfo = createElement({\n            parent: chat,\n            classes: ['chats-panel__chat-info'],\n        });\n\n        createElement({\n            parent: chatInfo,\n            classes: ['chats-panel__chat-title'],\n            text: chatData.name,\n        });\n\n        createElement({\n            parent: chatInfo,\n            classes: ['chats-panel__msg-info'],\n            attrs: {id: CHAT_INFO_PREFIX + chatData.username},\n        });\n\n        this.renderLastMsg(chatData);\n\n        return chat;\n    }\n\n    renderLastMsg(chatData) {\n        const lastMsgWrapper = document.getElementById(CHAT_INFO_PREFIX + chatData.username);\n        lastMsgWrapper.innerHTML = '';\n\n        const value = getLsItem(\n            CHAT_MSG_PREFIX + `${this.#config.user.username}-${chatData.username}`,\n            ''\n        );\n        \n        if (value) {\n            createElement({\n                parent: lastMsgWrapper,\n                classes: ['chats-panel__draft'],\n                text: DRAFT_PREFIX_TEXT,\n            });\n        }\n        createElement({\n            parent: lastMsgWrapper,\n            classes: ['chats-panel__msg'],\n            text: value ? value : chatData.lastMsg,\n        });\n\n        createElement({\n            parent: lastMsgWrapper,\n            classes: ['chats-panel__msg-divider'],\n            text: LAST_MSG_TIME_DIVIDER,\n        });\n\n        createElement({\n            parent: lastMsgWrapper,\n            text: chatData.lastMsgTime,\n        });\n    }\n\n    renderSearchBar() {\n        const searchBar = createElement({\n            parent: this.container,\n            classes: ['chats-panel__header'],\n        });\n\n        const searchBarTop = createElement({\n            parent: searchBar,\n            classes: ['chats-panel__section'],\n        });\n\n        createElement({\n            parent: searchBarTop,\n            classes: ['chats-panel__title'],\n            text: CHATS_TITLE,\n        });\n\n        createElement({\n            parent: searchBarTop,\n            classes: ['chats-panel__filter'],\n        });\n\n        new InputComponent(searchBar, {\n            type: 'search',\n            placeholder: SEARCH_PLACEHOLDER,\n            showRequired: false,\n            classes: ['chats-panel__search']\n        });\n    }\n}","import Ajax from '../../modules/ajax.js';\nimport ChatsPanelComponent from './ChatsPanelComponent.js';\nimport ChatWindowComponent from './ChatWindowComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nexport default class MessengerComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.render();\n    }\n\n    render() {\n        const messengerWrapper = createElement({\n            parent: this.#parent.container,\n            classes: ['messenger'],\n        });\n\n        const chatsPanel = new ChatsPanelComponent(messengerWrapper, {\n            user: this.#config.user,\n            messenger: this\n        });\n        const chatWindow = new ChatWindowComponent(messengerWrapper, {\n            user: this.#config.user,\n            messenger: this\n        });\n\n        chatsPanel.chatWindow = chatWindow;\n        chatWindow.chatsPanel = chatsPanel;\n    }\n\n    ajaxGetChat(username, cb) {\n        Ajax.get({\n            url: '/chat',\n            params: { username },\n            callback: (status, chatMsgs) => {\n                this.ajaxCallbackAuth(status);\n                cb(chatMsgs);\n            }\n        });\n    }\n\n    ajaxGetChats(cb) {\n        Ajax.get({\n            url: '/chats',\n            callback: (status, chatsData) => {\n                this.ajaxCallbackAuth(status);\n                cb(chatsData);\n            }\n        });\n    }\n\n    ajaxCallbackAuth(status) {\n        let isAuthorized = status === 200;\n        if (!isAuthorized) {\n            this.#config.menu.goToPage(this.#config.menu.menuElements.login);\n            this.#config.menu.updateMenuVisibility(false);\n            return;\n        }\n    }\n}\n","import ContextMenuComponent from '../ContextMenuComponent/ContextMenuComponent.js'\nimport AvatarComponent from '../AvatarComponent/AvatarComponent.js';\nimport formatTimeAgo from '../../utils/formatTimeAgo.js';\nimport createElement from '../../utils/createElement.js';\n\n\nconst AUTHOR_AVATAR_SIZE = 's';\nconst PICTURE_WIDTH = 553;\nconst READ_MORE_BTN_TEXT = 'Показать ещё';\nconst READ_LESS_BTN_TEXT = 'Скрыть';\nconst ADD_TO_FRIENDS_BTN_TEXT = 'Добавить в друзья';\nconst AUTHOR_NAME_DATE_DIVIDER = '•';\nconst DEAFULT_IMG_ALT = 'post image';\nconst DISPLAYED_ACTIONS = ['like', 'comment', 'repost'];\n\n\nexport default class PostComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n        \n        this.wrapper = null;\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['post'],\n        });\n\n        this.renderTop();\n        this.renderPics();\n        // this.renderActions();\n        this.renderText();\n    }\n\n    renderPics() {\n        if (!this.#config.pics || this.#config.pics.length === 0) {\n            return;\n        }\n\n        const picsWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['post__pics'],\n        });\n\n        const slider = createElement({\n            parent: picsWrapper,\n            classes: ['post__slider'],\n        });\n\n        if (this.#config.pics && this.#config.pics.length > 0) {\n            this.#config.pics.forEach((pic) => {\n                const slide = createElement({\n                    parent: slider,\n                    classes: ['post__slide'],\n                });\n                createElement({\n                    parent: slide,\n                    classes: ['post__pic'],\n                    attrs: {src: pic, alt: DEAFULT_IMG_ALT}\n                });\n            });\n        }\n\n        let currentIndex = 0;\n        const totalPics = this.#config.pics.length;\n\n        if (totalPics > 1) {\n            const paginator = createElement({\n                parent: picsWrapper,\n                classes: ['post__paginator'],\n                text: `${currentIndex + 1}/${totalPics}`\n            });\n\n            const prevBtn = createElement({\n                parent: picsWrapper,\n                classes: ['post__nav', 'post__nav_prev', 'hidden'],\n            });\n\n            createElement({\n                parent: prevBtn,\n                attrs: {src: 'static/img/prev-arrow-icon.svg'}\n            });\n\n            const nextBtn = createElement({\n                parent: picsWrapper,\n                classes: ['post__nav', 'post__nav_next'],\n            });\n\n            createElement({\n                parent: nextBtn,\n                attrs: {src: 'static/img/next-arrow-icon.svg'}\n            });\n\n            prevBtn.addEventListener('click', () => {\n                if (currentIndex > 0) {\n                    currentIndex--;\n                    slider.style.transform = `translateX(-${currentIndex * PICTURE_WIDTH}px)`;\n                    paginator.innerText = `${currentIndex + 1}/${totalPics}`;\n\n                    if (currentIndex === 0) {\n                        prevBtn.classList.add('hidden');\n                    }\n                    if (currentIndex < totalPics - 1) {\n                        nextBtn.classList.remove('hidden');\n                    }\n                }\n            });\n    \n            nextBtn.addEventListener('click', () => {\n                if (currentIndex < totalPics - 1) {\n                    currentIndex++;\n                    slider.style.transform = `translateX(-${currentIndex * PICTURE_WIDTH}px)`;\n                    paginator.innerText = `${currentIndex + 1}/${totalPics}`;\n\n                    if (currentIndex > 0) {\n                        prevBtn.classList.remove('hidden');\n                    }\n                    if (currentIndex === totalPics - 1) {\n                        nextBtn.classList.add('hidden');\n                    }\n                }\n            });\n        }\n    }\n\n    renderActions() {\n        const actionsWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['post__actions'],\n        });\n\n        const countedActions = createElement({\n            parent: actionsWrapper,\n            classes: ['post__actions_counted'],\n        });\n\n        for (const key of DISPLAYED_ACTIONS) {\n            const actionWrapper = createElement({\n                parent: countedActions,\n                classes: ['post__action'],\n            });\n            createElement({\n                parent: actionWrapper,\n                classes: [`post__${key}`],\n            });\n            createElement({\n                parent: actionWrapper,\n                classes: ['post__counter'],\n                text: this.#config[`${key}_count`]\n            });\n        }\n\n        createElement({\n            parent: actionsWrapper,\n            classes: ['post__bookmark'],\n        });\n    }\n\n    renderText() {\n        const textWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['post__content'],\n        });\n\n        const text = createElement({\n            tag: 'p',\n            parent: textWrapper,\n            classes: ['post__text'],\n            text: this.#config.text,\n        });\n\n        const readMore = createElement({\n            tag: 'p',\n            parent: textWrapper,\n            classes: ['post__more'],\n            text: READ_MORE_BTN_TEXT,\n            attrs: {style: 'display: none;'}\n        });\n\n        // После рендеринга проверяем, обрезается ли текст\n        requestAnimationFrame(() => {\n            if (text.scrollHeight > text.clientHeight) {\n                readMore.style.display = 'inline-block';\n            }\n        });\n\n        // Добавляем обработчик клика для разворачивания и сворачивания текста\n        readMore.addEventListener('click', () => {\n            if (text.classList.contains('post__text_expanded')) {\n                text.classList.remove('post__text_expanded');\n                readMore.textContent = READ_MORE_BTN_TEXT;\n            } else {\n                text.classList.add('post__text_expanded');\n                readMore.textContent = READ_LESS_BTN_TEXT;\n            }\n        });\n    }\n\n    renderTop() {\n        const topWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['post__header'],\n        });\n\n        const authorWrapper = createElement({\n            parent: topWrapper,\n            classes: ['post__author'],\n        });\n\n        new AvatarComponent(authorWrapper, {\n            size: AUTHOR_AVATAR_SIZE,\n            src: this.#config.avatar,\n        });\n\n        const topRightWrapper = createElement({\n            parent: authorWrapper,\n            classes: ['post__author-info'],\n        });\n\n        const nameDateWrapper = createElement({\n            parent: topRightWrapper,\n            classes: ['post__info'],\n        });\n\n        createElement({\n            tag: 'h2',\n            parent: nameDateWrapper,\n            text: `${this.#config.firstname} ${this.#config.lastname}`,\n        });\n\n        createElement({\n            classes: ['post__date', 'p1'],\n            parent: nameDateWrapper,\n            text: AUTHOR_NAME_DATE_DIVIDER,\n        });\n\n        createElement({\n            classes: ['post__date', 'p1'],\n            parent: nameDateWrapper,\n            text: `${formatTimeAgo(this.#config.created_at)}`,\n        });\n\n        const flag = true;\n        if (flag) { // TODO: сделать проверку на то, есть ли в друзьях\n            createElement({\n                tag: 'a',\n                classes: ['h3', 'post__add-to-friends'],\n                parent: topRightWrapper,\n                text: ADD_TO_FRIENDS_BTN_TEXT,\n            });\n        }\n\n        const dropdown = createElement({\n            classes: ['dropdown'],\n            parent: topWrapper,\n        });\n\n        const optionsWrapper = createElement({\n            classes: ['post__options'],\n            parent: dropdown,\n        });\n\n        createElement({\n            classes: ['post__options-icon'],\n            parent: optionsWrapper,\n        });\n\n        new ContextMenuComponent(dropdown, {\n            data: {\n                notify: {\n                    href: '/notify',\n                    text: 'Уведомлять о постах',\n                    icon: 'notice-icon',\n                },\n                copyLink: {\n                    href: '/copy-link',\n                    text: 'Скопировать ссылку',\n                    icon: 'copy-icon',\n                },\n                notInterested: {\n                    href: '/not-interested',\n                    text: 'Не интересно',\n                    icon: 'cross-circle-icon',\n                },\n                ban: {\n                    href: '/ban',\n                    text: 'Пожаловаться',\n                    icon: 'ban-icon',\n                    isCritical: true\n                }\n            }\n        });\n    }\n}\n","import AvatarComponent from '../AvatarComponent/AvatarComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nconst AVATAR_SIZE = 'xl';\nconst USERNAME_PREFIX = '@';\n\n\nexport default class ProfileMenuComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#config = config;\n        this.#parent = parent;\n        \n        this.wrapper = null;\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['profile-menu'],\n        });\n        \n        const topWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['profile-menu__info'],\n        });\n\n        new AvatarComponent(topWrapper, {\n            size: AVATAR_SIZE,\n            src: this.#config.userData.profile.avatar_url,\n        });\n\n        const userData = createElement({\n            parent: topWrapper,\n            classes: ['profile-menu__profile-info'],\n        });\n\n        createElement({\n            parent: userData,\n            classes: ['profile-menu__name'],\n            text: `${this.#config.userData.profile.firstname} ${this.#config.userData.profile.lastname}`\n        });\n\n        createElement({\n            parent: userData,\n            classes: ['profile-menu__username'],\n            text: `${USERNAME_PREFIX}${this.#config.userData.profile.username}`\n        });\n\n        const menuItems = createElement({\n            parent: this.wrapper,\n            classes: ['profile-menu__items'],\n        });\n\n        Object.entries(this.#config.menuItems).forEach(([key, { href, text, icon }],) => {\n            const menuItem = createElement({\n                tag: 'a',\n                parent: menuItems,\n                classes: ['profile-menu__item'],\n                attrs: {href}\n            });\n            createElement({\n                parent: menuItem,\n                attrs: {src: `/static/img/${icon}.svg`}\n            });\n            createElement({\n                parent: menuItem,\n                text\n            });\n\n            menuItem.addEventListener('click', (event) => {\n                event.preventDefault();\n                this.#config.menuItems[key].render();\n            });\n        });\n    }\n}\n","import createElement from '../../utils/createElement.js';\n\nexport default class RadioMenuComponent {\n    #config\n    #parent\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.wrapper = null;\n        this.pages = {};\n        this.activePage = null;\n        \n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['radio-menu']\n        });\n\n        Object.entries(this.#config.items).forEach(([key, { title }], index) => {\n            const menuItem = createElement({\n                parent: this.wrapper,\n                classes: ['radio-menu__item'],\n                text: title,\n                attrs: {\n                    'data-section': key,\n                },\n            });\n\n            if (index === 0) {\n                menuItem.classList.add('radio-menu__item_active');\n                this.activePage = menuItem;\n            }\n\n            menuItem.addEventListener('click', (event) => {\n                event.preventDefault();\n                this.goToPage(event.target);\n            });\n        });\n    }\n\n    goToPage(menuItem) {\n        if (this.activePage === menuItem) return;\n        if (this.activePage) {\n            this.activePage.classList.remove('radio-menu__item_active');\n        }\n        menuItem.classList.add('radio-menu__item_active');\n        this.activePage = menuItem;\n\n        const section = menuItem.dataset.section;\n        if (this.#config.items[section].onClick) {\n            this.#config.items[section].onClick();\n        }\n    }\n}\n","import createElement from '../../utils/createElement.js';\n\n\nexport default class ResizerComponent {\n    #parent\n    #config\n    #isMini\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.container = null;\n        this.#isMini = false;\n        this.render();\n    }\n\n    render() {\n        this.container = createElement({\n            parent: this.#parent,\n            classes: ['resizer'],\n        });\n\n        this.addFunctionality();\n    }\n\n    addFunctionality() {\n        let isResizing = false;\n        \n        this.container.addEventListener('mousedown', () => {\n            isResizing = true;\n            document.body.classList.add('resize');\n        });\n    \n        document.addEventListener('mousemove', (event) => {\n            if (!isResizing) return;\n    \n            const newWidth = event.clientX - this.#parent.getBoundingClientRect().left;\n            this.#parent.style.width = `${newWidth}px`;\n\n            if (this.#config.toDefaultWidth && this.#config.toMiniWidth) {\n                if (newWidth < this.#config.toMiniWidth) {\n                    this.#parent.classList.add(this.#config.classMini);\n                    this.#isMini = true;\n                } else if (newWidth > this.#config.toDefaultWidth) {\n                    this.#parent.classList.remove(this.#config.classMini);\n                    this.#isMini = false;\n                }\n            }\n        });\n    \n        document.addEventListener('mouseup', () => {\n            if (isResizing) {\n                isResizing = false;\n                document.body.classList.remove('resize');\n                if (this.#isMini) {\n                    this.#config.onResized(this.#config.classMini);\n                    return;\n                }\n                this.#config.onResized(this.#parent.style.width);\n            }\n        });\n    }\n}","import Ajax from '../../modules/ajax.js';\nimport InputComponent from '../UI/InputComponent/InputComponent.js';\nimport RadioComponent from '../UI/RadioComponent/RadioComponent.js';\nimport ButtonComponent from '../UI/ButtonComponent/ButtonComponent.js';\nimport createElement from '../../utils/createElement.js';\nimport focusInput from '../../utils/focusInput.js';\nimport convertDate from '../../utils/convertDate.js';\nimport { getLsItem, removeLsItem, setLsItem } from '../../utils/localStorage.js';\n\n\nconst LOGO_SRC = '/static/img/logo-icon.svg';\nconst DEFAULT_INPUT_VALUE = '';\nconst CREATION_ERROR_MESSAGE = 'Не удалось создать аккаунт';\nconst USER_INFO_TITLE = 'Информация о себе';\nconst PWD_TITLE = 'Придумайте пароль';\nconst PWD_TEXT = 'Или используйте пароль, предложенный устройством';\nconst CONTINUE_BTN_TEXT = 'Продолжить';\nconst PWD_INPUT_MAX_LENGTH = 32;\nconst MALE_VALUE = 1;\nconst FEMALE_VALUE = 2;\n\n\nexport default class SignupFormComponent {\n    #parent\n    #step\n    #menu\n    #header\n    #focusTimer\n    constructor(parent, menu, header) {\n        this.#parent = parent;\n        this.#menu = menu;\n        this.#header = header;\n\n        this.#focusTimer = null;\n        this.usernameInput = null;\n        this.firstnameInput = null;\n        this.lastnameInput = null;\n        this.sexInput = null;\n        this.birthDateInput = null;\n        this.passwordInput = null;\n        this.passwordConfirmationInput = null;\n\n        this.continueBtn = null;\n\n        this.#step = 1;\n        this.render();\n    }\n\n    render() {\n        this.#parent.innerHTML = '';\n\n        const form = createElement({\n            tag: 'form',\n            parent: this.#parent,\n            classes: ['auth-form']\n        });\n\n        if (this.#step === 1) {\n            this.renderPersonalInfoStep(form);\n        } else if (this.#step === 2) {\n            this.renderCreatePasswordStep(form);\n        }\n    }\n\n    renderTopWrapper(form) {\n        const topWrapper = createElement({\n            parent: form,\n            classes: ['auth-form__top']\n        });\n\n        createElement({\n            tag: 'a',\n            parent: topWrapper,\n            classes: ['auth-form__back-btn']\n        })\n        .addEventListener('click', () => {\n            if (this.#step === 1) {\n                removeLsItem(this.usernameInput.name);\n                removeLsItem(this.firstnameInput.name);\n                removeLsItem(this.lastnameInput.name);\n                removeLsItem(this.sexInput.name);\n                removeLsItem(this.birthDateInput.name);\n                this.#menu.goToPage(this.#menu.menuElements.login);\n                return;\n            }\n            this.#step = 1;\n            this.render();\n        });\n\n        if (this.#step === 2) {\n            createElement({\n                parent: topWrapper,\n                classes: ['auth-form__logo'],\n                attrs: {src: LOGO_SRC}\n            })\n        }\n\n        createElement({\n            tag: 'h1',\n            parent: topWrapper,\n            text: this.#step === 1 ? USER_INFO_TITLE : PWD_TITLE\n        })\n\n        if (this.#step === 2) {\n            createElement({\n                tag: 'p',\n                parent: topWrapper,\n                classes: ['p1'],\n                text: PWD_TEXT,\n            })\n        }\n    }\n\n    renderBottomWrapper(form) {\n        const bottomWrapper = createElement({\n            parent: form,\n            classes: ['auth-form__bottom'],\n        })\n\n        this.continueBtn = new ButtonComponent(bottomWrapper, {\n            text: CONTINUE_BTN_TEXT,\n            variant: 'primary',\n            onClick:\n                this.#step === 1\n                    ? this.continueBtnOnClick.bind(this)\n                    : this.signupBtnOnClick.bind(this),\n            disabled: true,\n            stateUpdaters: \n                this.#step === 1\n                ? [\n                    this.usernameInput,\n                    this.firstnameInput,\n                    this.lastnameInput,\n                    this.birthDateInput,\n                    this.sexInput\n                ]\n                : [\n                    this.passwordInput,\n                    this.passwordConfirmationInput\n                ]\n        });\n    }\n\n    renderPersonalInfoStep(form) {\n        this.renderTopWrapper(form);\n\n        const fieldsetPersonalInfo = createElement({\n            tag: 'fieldset',\n            parent: form,\n            classes: ['auth-form__personal-info'],\n        })\n\n        this.usernameInput = new InputComponent(fieldsetPersonalInfo, {\n            type: 'text',\n            name: 'username',\n            label: 'Имя пользователя',\n            placeholder: 'Имя пользователя',\n            autocomplete: 'username',\n            maxLength: 20,\n            validation: 'username',\n            required: true,\n            showRequired: false,\n            value: getLsItem(\"username\", DEFAULT_INPUT_VALUE),\n        });\n        focusInput(this.usernameInput.input, this.#focusTimer);\n\n        const nameInputWrapper = createElement({\n            parent: fieldsetPersonalInfo,\n            classes: ['auth-form__name-inputs'],\n        })\n\n        this.firstnameInput = new InputComponent(nameInputWrapper, {\n            type: 'text',\n            label: 'Имя',\n            name: 'firstname',\n            placeholder: 'Имя',\n            maxLength: 25,\n            validation: 'name',\n            required: true,\n            showRequired: false,\n            value: getLsItem(\"firstname\", DEFAULT_INPUT_VALUE),\n        });\n\n        this.lastnameInput = new InputComponent(nameInputWrapper, {\n            type: 'text',\n            label: 'Фамилия',\n            name: 'lastname',\n            placeholder: 'Фамилия',\n            maxLength: 25,\n            validation: 'name',\n            required: true,\n            showRequired: false,\n            value: getLsItem(\"lastname\", DEFAULT_INPUT_VALUE),\n        });\n\n        this.sexInput = new RadioComponent(fieldsetPersonalInfo, {\n            label: 'Пол',\n            name: 'sex',\n            radios: {\n                male: {\n                    id: 'radio-male',\n                    value: 'male',\n                    label: 'Мужской'\n                },\n                female: {\n                    id: 'radio-female',\n                    value: 'female',\n                    label: 'Женский'\n                }\n            },\n            required: true,\n            showRequired: false\n        });\n        this.sexInput.setChecked(getLsItem(\"sex\", \"\"));\n\n        this.birthDateInput = new InputComponent(fieldsetPersonalInfo, {\n            type: 'text',\n            label: 'Дата рождения',\n            name: 'birthDate',\n            placeholder: 'дд.мм.гггг',\n            autocomplete: 'date',\n            validation: 'date',\n            required: true,\n            showRequired: false,\n            value: getLsItem(\"birthDate\", DEFAULT_INPUT_VALUE),\n        });\n\n        this.renderBottomWrapper(form);\n    }\n\n    renderCreatePasswordStep(form) {\n        this.renderTopWrapper(form);\n\n        this.passwordInput = new InputComponent(form, {\n            type: 'password',\n            placeholder: 'Введите пароль',\n            maxLength: PWD_INPUT_MAX_LENGTH,\n            validation: 'password',\n            required: true,\n            showRequired: false\n        });\n        focusInput(this.passwordInput.input, this.#focusTimer);\n\n        this.passwordConfirmationInput = new InputComponent(form, {\n            type: 'password',\n            placeholder: 'Повторите пароль',\n            maxLength: PWD_INPUT_MAX_LENGTH,\n            validation: 'password',\n            required: true,\n            showRequired: false\n        });\n\n        this.passwordConfirmationInput.addListener(() => {\n            this.passwordInput.addListener(() => this.validatePasswordConfirmation());\n            this.validatePasswordConfirmation();\n        });\n\n        this.renderBottomWrapper(form);\n    }\n\n    validatePasswordConfirmation() {\n        const password = this.passwordInput.value;\n        const confirmPassword = this.passwordConfirmationInput.value;\n\n        if (password !== confirmPassword) {\n            this.passwordConfirmationInput.showError('Пароли не совпадают');\n            return false;\n        }\n        this.passwordConfirmationInput.hideError();\n        return true;\n    }\n\n    continueBtnOnClick() {\n        setLsItem(this.usernameInput.name, this.usernameInput.value);\n        setLsItem(this.firstnameInput.name, this.firstnameInput.value);\n        setLsItem(this.lastnameInput.name, this.lastnameInput.value);\n        setLsItem(this.sexInput.name, this.sexInput.value);\n        setLsItem(this.birthDateInput.name, this.birthDateInput.value);\n        this.#step = 2;\n        this.render();\n    }\n\n    signupBtnOnClick(event) {\n        event.preventDefault();\n        this.submitSignup();\n    }\n\n    submitSignup() {\n        Ajax.post({\n            url: '/signup',\n            body: {\n                username: this.usernameInput.value,\n                password: this.passwordInput.value,\n                firstname: this.firstnameInput.value,\n                lastname: this.lastnameInput.value,\n                sex: this.sexInput.value === 'male' ? MALE_VALUE : FEMALE_VALUE, \n                birth_date: convertDate(this.birthDateInput.value, 'ts'),\n            },\n            callback: (status) => {\n                if (status === 200) {\n                    this.#menu.goToPage(this.#menu.menuElements.feed);\n                    this.#menu.checkAuthPage();\n                    this.#menu.updateMenuVisibility(true);\n                    this.#header.renderAvatarMenu();\n                    return;\n                }\n                this.passwordInput.showError(CREATION_ERROR_MESSAGE);\n            }\n        });\n    }\n}\n","import createElement from '../../../utils/createElement.js';\n\n\nconst DEFAULT_TYPE = 'button';\nconst DEFAULT_TEXT_CONTENT = '';\nconst DEFAULT_SIZE_CLASS = 'large';\nconst DEFAULT_CLASSES = ['button'];\n\n\nexport default class ButtonComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.buttonElement = null;\n        this.render();\n    }\n\n    render() {\n        this.buttonElement = createElement({\n            tag: 'button',\n            parent: this.#parent,\n            attrs: { type: this.#config.type || DEFAULT_TYPE },\n            classes: [\n                'button',\n                `button_${this.#config.variant}`,\n                `button_${this.#config.size || DEFAULT_SIZE_CLASS}`,\n                ...this.#config.classes || DEFAULT_CLASSES,\n            ],\n            text: this.#config.text || DEFAULT_TEXT_CONTENT,\n        });\n        \n\n        if (this.#config.disabled) {\n            this.buttonElement.disabled = true;\n        }\n\n        if (this.#config.onClick && typeof this.#config.onClick === 'function') {\n            this.buttonElement.addEventListener('click', this.#config.onClick);\n        }\n\n        if (this.#config.stateUpdaters) {\n            if (Array.isArray(this.#config.stateUpdaters) && this.#config.stateUpdaters.length > 0) {\n                this.#config.stateUpdaters.forEach(stateUpdater => {\n                    stateUpdater.addListener(() => this.updateBtnState());\n                });\n            }\n            this.updateBtnState()\n        }\n    }\n\n    updateBtnState() {\n        const isRequiredValid = this.#config.stateUpdaters.every(stateUpdater => {\n            if (stateUpdater.required) return stateUpdater.isValid();\n            return true;\n        });\n        const isOptionalFilled = this.#config.stateUpdaters.some(stateUpdater => {\n            if (!stateUpdater.required) return !stateUpdater.isEmpty();\n            return true;\n        });\n        this.buttonElement.disabled = !(isRequiredValid && isOptionalFilled);\n    }\n}\n","import createElement from '../../../utils/createElement.js';\n\n\nconst DEFAULT_TYPE = 'file';\nconst DEFAULT_NAME = '';\nconst DEFAULT_ACCEPT_IMAGE = 'image/*';\n\n\nexport default class FileInputComponent {\n    #parent\n    #config\n    #files = []\n    constructor(parent, config) {\n        this.#config = config;\n        this.#parent = parent;\n\n        this.input = null;\n        this.render();\n    }\n\n    get name() {\n        return this.#config.name?.trim();\n    }\n\n    get value() {\n        if (this.input.files.length === 1) return this.input.files[0];\n        return this.input.files;\n    }\n\n    get required() {\n        return this.#config.required;\n    }\n\n    isEmpty() {\n        return !this.input.files || this.input.files.length === 0;\n    }\n\n    render() {\n        this.input = createElement({\n            parent: this.#parent,\n            tag: 'input',\n            attrs: {\n                type: DEFAULT_TYPE,\n                accept: this.#config.accept || DEFAULT_ACCEPT_IMAGE,\n                name: this.name || DEFAULT_NAME,\n                id: this.#config.id || ''\n            },\n            classes: this.#config.classes,\n        });\n\n        if (this.required) {\n            this.input.setAttribute('required', '');\n        }\n\n        if (this.#config.multiple) {\n            this.input.setAttribute('multiple', '');\n        }\n\n        if (this.#config.imitator) {\n            this.input.classList.add('hidden');\n            this.#config.imitator.addEventListener('click', () => {\n                this.input.click();\n            });\n        }\n        \n        if (this.#config.preview) {\n            this.input.onchange = async (event) => {\n                try {\n                    await this.#config.multiple ? this.multipleOnchange(event) : this.singleOnchange();\n                    this.#config.onUpload ? this.#config.onUpload() : null;\n                } catch (error) {\n                    console.error(\"Ошибка при чтении файла\", error);\n                }\n            };\n        }\n    }\n    \n    async multipleOnchange(event) {\n        const newFiles = Array.from(event.target.files);\n        this.#files.push(...newFiles);\n\n        const imageDataUrls = await Promise.all(newFiles.map(this.readImageFile));\n        for (const imageDataUrl of imageDataUrls) {\n            const picWrapper = this.#config.preview.cloneNode(true);\n            picWrapper.querySelector('img').src = imageDataUrl;\n            this.#parent.insertBefore(picWrapper, this.#config.imitator);\n        }\n        \n        this.updateInputFiles();\n    }\n\n    async singleOnchange() {\n        const imageDataUrl = await this.readImageFile(event.target.files[0]);\n        this.#config.preview.src = imageDataUrl;\n    }\n\n    async readImageFile(file) {\n        const reader = new FileReader();\n        \n        return new Promise((resolve, reject) => {\n            reader.onload = event => resolve(event.target.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n    }\n\n    updateInputFiles() {\n        const dataTransfer = new DataTransfer();\n\n        for (const file of this.#files) {\n            dataTransfer.items.add(file);\n        }\n\n        this.input.files = dataTransfer.files;\n    }\n\n    addListener(listener) {\n        this.input.addEventListener('change', listener);\n    }\n\n    getFiles() {\n        return this.#files;\n    }\n\n    isValid() {\n        if (!this.required) return true;\n        return this.#files.length > 0;\n    }\n}\n","import formatDateInput from '../../../utils/formatDateInput.js';\nimport createElement from '../../../utils/createElement.js';\n\n\nconst DEFAULT_MAX_LENGTH = 256;\nconst DEFAULT_AUTOCOMPLETE = 'off';\nconst DEFAULT_PLACEHOLDER = '';\nconst DEFAULT_TYPE = 'text';\nconst DEFAULT_INPUT_VALUE = '';\nconst REQUIRED_MARK_TEXT = ' *';\nconst MAX_DATE_INPUT_LENGTH = 10;\nconst MIN_NAME_INPUT_LENGTH = 2;\nconst MIN_PASSWORD_INPUT_LENGTH = 8;\nconst DEFAULT_NAME = 'undefined';\n\n\nexport default class InputComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#config = config;\n        this.#parent = parent;\n\n        this.input = null;\n        this.error = null;\n        this.wrapper = null;\n        this.innnerWrapper = null;\n\n        this.render();\n    }\n\n    get config() {\n        return this.#config;\n    }\n\n    get value() {\n        return this.input.value.trim();\n    }\n\n    get name() {\n        return this.#config.name?.trim();\n    }\n\n    get required() {\n        return this.#config.required;\n    }\n\n    isEmpty() {\n        return this.input.value.trim() === '';\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: [this.#config.classes, 'input'],\n        });\n\n        // Label (если задан)\n        if (this.#config.label) {\n            const label = createElement({\n                tag: 'label',\n                text: this.#config.label,\n                parent: this.wrapper,\n                classes: ['input__label'],\n            });\n            if (this.#config.showRequired) {\n                createElement({ // TODO: протестировать\n                    tag: 'span',\n                    text: REQUIRED_MARK_TEXT,\n                    parent: label,\n                    classes: ['input__required'],\n                });\n            }\n        }\n        \n        this.innnerWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['input__inner'],\n        });\n\n        // Поле ввода\n        this.input = createElement({\n            tag: 'input',\n            parent: this.innnerWrapper,\n            classes: ['input__field'],\n            attrs: {\n                type: this.#config.type || DEFAULT_TYPE,\n                autocomplete: this.#config.autocomplete || DEFAULT_AUTOCOMPLETE,\n                placeholder: this.#config.placeholder || DEFAULT_PLACEHOLDER,\n                maxLength: this.#config.maxLength || DEFAULT_MAX_LENGTH,\n                value: this.#config.value || DEFAULT_INPUT_VALUE,\n                name: this.name || DEFAULT_NAME,\n            },\n        });\n\n        if (this.required) {\n            this.input.setAttribute('required', '');\n        }\n\n        this.error = createElement({\n            classes: ['input__error'],\n        });\n\n        if (this.input.type === 'password') {\n            const pwdControl = createElement({\n                parent: this.innnerWrapper,\n                tag: 'a',\n                classes: ['input__password-toggle'],\n            });\n\n            pwdControl.addEventListener('click', () => {\n                if (this.input.getAttribute('type') === 'password') {\n                    pwdControl.classList.add('input__password-toggle_show');\n                    this.input.setAttribute('type', 'text');\n                } else {\n                    pwdControl.classList.remove('input__password-toggle_show');\n                    this.input.setAttribute('type', 'password');\n                }\n            });\n        } else if (this.input.type === 'search') {\n            createElement({\n                parent: this.innnerWrapper,\n                classes: ['input__search-icon'],\n            });\n        }\n\n        // Добавление обработчиков валидации\n        if (this.#config.validation) {\n            this.input.addEventListener('input', () => this.validate());\n        }\n\n        // Описание (если задано)\n        if (this.#config.description || this.#config.maxLength) { // TODO: протестировать \n            const descWrapper = createElement({\n                parent: this.wrapper,\n                classes: ['input__description-wrapper'],\n            });\n\n            if (this.#config.description) {\n                createElement({\n                    tag: 'span',\n                    text: this.#config.description,\n                    parent: descWrapper,\n                    classes: ['input__description'],\n                });\n            }\n\n            if (this.#config.showCharactersLeft) {\n                const counter = createElement({\n                    tag: 'span',\n                    text: this.#config.maxLength,\n                    parent: descWrapper,\n                    classes: ['input__counter'],\n                });\n\n                this.input.addEventListener('input', () => {\n                    counter.textContent = this.#config.maxLength - this.input.value.length;\n                });\n            }\n        }\n    }\n\n    addListener(listener) {\n        this.input.addEventListener('input', listener);\n    }\n\n    isValid() {\n        if (!this || !this.input) return false;\n        if (this.#config.validation === 'date' && this.input.value.trim().length < MAX_DATE_INPUT_LENGTH) {\n            return false;\n        }\n        if (!this.required && !this.input.classList.contains('input__field_invalid')) return true;\n        return this.input.value.trim() !== '' && !this.input.classList.contains('input__field_invalid');\n    }\n\n    validate() {\n        const value = this.input.value;\n\n        if (this.#config.validation === 'email') {\n            this.validateEmail(value);\n        } else if (this.#config.validation === 'password') {\n            this.input.minLength = MIN_PASSWORD_INPUT_LENGTH;\n            this.validatePassword(value);\n        } else if (this.#config.validation === 'username') {\n            this.validateUsername(value);\n        } else if (this.#config.validation === 'name') {\n            this.validateName(value);\n        } else if (this.#config.validation === 'date') {\n            this.input.maxLength = MAX_DATE_INPUT_LENGTH;\n            this.input.addEventListener('input', formatDateInput(this.input));\n            if (value.length === MAX_DATE_INPUT_LENGTH) {\n                this.validateDate(value);\n            } else {\n                this.hideError();\n            }\n        }\n    }\n\n    validateName(name) {\n        const chars = Array.from(name);\n        const hasValidCharacters = chars.every((char) => /^[\\p{L}-]+$/u.test(char));\n\n        if (!name) {\n            this.showError('Введите ' + (this.#config.placeholder === 'Имя' ? 'имя' : 'фамилию'));\n        } else if (!hasValidCharacters) {\n            this.showError(this.#config.placeholder + ' может содержать только буквы и \"-\"');\n        } else if (name.length < MIN_NAME_INPUT_LENGTH) {\n            this.showError('Слишком ' + (this.#config.placeholder === 'Имя' ? 'короткое имя' : 'короткая фамилия'));\n        } else {\n            this.hideError();\n        }\n    }\n\n    validateUsername(username) {\n        const chars = Array.from(username);\n        const hasValidCharacters = chars.every((char) => /^[a-zA-Z0-9._]+$/.test(char));\n\n        if (!username) {\n            this.showError('Введите имя пользователя');\n        } else if (!hasValidCharacters) {\n            this.showError('Имя пользователя может содержать только латинские буквы, цифры, \".\" и \"_\"');\n        } else if (chars[0] === '.' || chars[0] === '_') {\n            this.showError('Имя пользователя не должно начинаться с \".\" или \"_\"');\n        } else {\n            this.hideError();\n        }\n    }\n\n    validateEmail(email) {\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n        if (!emailPattern.test(email) && email) {\n            this.showError('Некорректный Email');\n        } else {\n            this.hideError();\n        }\n    }\n\n    validatePassword(password) {\n        const chars = Array.from(password);\n        const hasValidCharacters = chars.every((char) => /[A-Za-z0-9_/!@#$%^&*(),.?\":{}|<>]/.test(char));\n        const hasUppercase = chars.some((char) => /[A-Z]/.test(char));\n        const hasLowercase = chars.some((char) => /[a-z]/.test(char));\n        const hasNumeric = chars.some((char) => !isNaN(char) && char !== ' ');\n        const hasSpecial = chars.some((char) => /[_/!@#$%^&*(),.?\":{}|<>]/.test(char));\n\n        if (!password) {\n            this.showError('Введите пароль');\n        } else if (!hasValidCharacters) {\n            this.showError('Пароль содержит некорректные символы');\n        } else if (password.length < MIN_PASSWORD_INPUT_LENGTH) {\n            this.showError('Пароль должен содержать минимум 8 символов');\n        } else if (!hasLowercase || !hasUppercase) {\n            this.showError('Пароль должен содержать символы в верхнем и нижнем регистрах');\n        } else if (!hasNumeric) {\n            this.showError('Пароль должен содержать хотя бы одну цифру');\n        } else if (!hasSpecial) {\n            this.showError('Пароль должен содержать хотя бы один спецсимвол');\n        } else {\n            this.hideError();\n        }\n    }\n\n    validateDate(date) {\n        const datePattern = /^(0[1-9]|[12][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(\\d{4})$/;\n\n        if (!datePattern.test(date)) {\n            this.showError('Некорректный формат даты');\n            return;\n        }\n\n        const [day, month, year] = date.split('.').map(Number);\n        const inputDate = new Date(year, month - 1, day);\n        const today = new Date();\n\n        // Проверка на будущее время\n        if (inputDate > today) {\n            this.showError('Дата не должна быть в будущем');\n            return;\n        }\n\n        // Проверка корректности даты\n        if (\n            inputDate.getDate() !== day ||\n            inputDate.getMonth() + 1 !== month ||\n            inputDate.getFullYear() !== year\n        ) {\n            this.showError('Некорректная дата');\n            return;\n        }\n\n        this.hideError(); // Если все ок, скрываем ошибку\n    }\n\n    showError(message) {\n        this.innnerWrapper.appendChild(this.error);\n        this.error.textContent = message;\n        this.error.style.display = 'block';\n        this.input.classList.add('input__field_invalid');\n    }\n\n    hideError() {\n        if (this.input.classList.contains('input__field_invalid')) {\n            this.innnerWrapper.removeChild(this.error);\n            this.input.classList.remove('input__field_invalid');\n        }\n    }\n}\n","import ButtonComponent from '../ButtonComponent/ButtonComponent.js';\nimport TextareaComponent from '../TextareaComponent/TextareaComponent.js';\nimport createElement from '../../../utils/createElement.js';\nimport convertDate from '../../../utils/convertDate.js';\nimport { profileDataLayout } from '../../../Views/ProfileView/ProfileView.js'\nimport Ajax from '../../../modules/ajax.js';\nimport FileInputComponent from '../FileInputComponent/FileInputComponent.js';\n\n\nexport default class ModalWindowComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.wrapper = null;\n        this.modalWindow = null;\n        this.title = null;\n        this.fileInput = [];\n        this.render();\n    }\n\n    render() {\n        document.body.style.overflow = 'hidden';\n\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['modal__bg'],\n        });\n\n        this.modalWindow = createElement({\n            parent: this.wrapper,\n            classes: ['modal'],\n        });\n\n        const modalTop = createElement({\n            parent: this.modalWindow,\n            classes: ['modal__top'],\n        });\n\n        this.title = createElement({\n            parent: modalTop,\n            classes: ['modal__title']\n        });\n\n        createElement({\n            tag: 'button',\n            parent: modalTop,\n            classes: ['modal__close']\n        })\n        .addEventListener('click', () => {\n            this.close();\n        });\n\n        if (this.#config.type === 'create-post') {\n            this.renderPostInner();\n        } else if (this.#config.type === 'profile-full-info') {\n            this.renderProfileInfoInner();\n        }\n    }\n\n    close() {\n        this.wrapper.remove();\n        document.body.style.overflow = 'auto';\n    }\n\n    renderPostInner() {\n        this.modalWindow.classList.add('modal_post');\n        this.title.textContent = 'Новый пост';\n\n        const picsWrapper = createElement({\n            parent: this.modalWindow,\n            classes: ['modal__pics', 'modal__pics_blank'],\n        });\n        const addPicWrapper = createElement({\n            parent: picsWrapper,\n            classes: ['modal__add-pic'],\n        });\n        createElement({\n            parent: addPicWrapper,\n            classes: ['modal__camera'],\n            attrs: {src: 'static/img/camera-dark-icon.svg'},\n        });\n        createElement({\n            tag: 'h4',\n            parent: addPicWrapper,\n            text: 'Добавьте фото',\n        });\n\n        this.fileInput = new FileInputComponent(picsWrapper, {\n            imitator: addPicWrapper,\n            preview: this.createPicWrapperTemplate(),\n            id: 'post-pic-upload',\n            onUpload: () => this.handlePicUpload(picsWrapper),\n            multiple: true,\n        });\n\n        const textarea = new TextareaComponent(this.modalWindow, {\n            placeholder: 'Поделитесь своими мыслями',\n        });\n\n        new ButtonComponent(this.modalWindow, {\n            text: 'Опубликовать',\n            variant: 'primary',\n            size: 'small',\n            onClick: () => this.handlePostSubmit(textarea.textarea.value.trim()),\n            disabled: true,\n            stateUpdaters: [textarea, this.fileInput]\n        });\n    }\n\n    createPicWrapperTemplate() {\n        const picWrapperTemplate = createElement({\n            classes: ['modal__pic'],\n        });\n        createElement({\n            tag: 'img',\n            parent: picWrapperTemplate,\n            classes: ['modal__img'],\n        });\n        return picWrapperTemplate;\n    }\n\n    handlePicUpload(picsWrapper) {\n        picsWrapper.classList.remove('modal__pics_blank');\n    }\n\n    async handlePostSubmit(text) {\n        if (!text && !this.fileInput.input.files.length) {\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('text', text);\n\n        if (this.fileInput.input.files.length > 0) {\n            for (const file of this.fileInput.input.files) {\n                formData.append('pics', file);\n            }\n        }\n\n        Ajax.post({\n            body: formData,\n            isFormData: true,\n            url: '/post',\n            callback: (status) => {\n                if (status === 200) {\n                    this.close();\n                } else if (status === 413) {\n                    alert('File is too large');\n                }\n            }\n        });\n    }\n\n    renderProfileInfoInner() {\n        this.modalWindow.classList.add('modal_profile');\n        this.title.textContent = 'Подробная информация';\n\n        const contentWrapper = createElement({\n            parent: this.modalWindow,\n            classes: ['modal__content'],\n        });\n\n        const items = createElement({\n            parent: contentWrapper,\n            classes: ['modal__items'],\n        });\n\n        this.#config.createInfoItem(\n            items,\n            profileDataLayout['username'].icon,\n            this.#config.data.profile.username\n        );\n        this.#config.createInfoItem(\n            items,\n            profileDataLayout['birth_date'].icon,\n            convertDate(this.#config.data.profile.birth_date)\n        );\n\n        this.renderProfileInfoBlock(items, this.#config.data.contact_info, false);\n\n        if (this.#config.data.school.length > 0) {\n            this.renderProfileInfoBlock(items, this.#config.data.school);\n        }\n        \n        if (this.#config.data.university.length > 0) {\n            this.renderProfileInfoBlock(items, this.#config.data.university);\n        }\n\n        // const countedItems = createElement({\n        //     parent: contentWrapper,\n        //     classes: ['modal-items-counted'],\n        // });\n\n        // for (const key in this.#config.data.countedData) {\n        //     const value = this.#config.data.countedData[key];\n        //     this.#config.createCountedItem(countedItems, profileDataLayout[key].text, value);\n        // }\n    }\n\n    renderProfileInfoBlock(parent, blockData, showDivider = true) {\n        if (showDivider) {\n            createElement({\n                parent,\n                classes: ['modal__divider'],\n            });\n        }\n        for (const key in blockData) {\n            const value = blockData[key];\n            this.#config.createInfoItem(parent, profileDataLayout[key].icon, value);\n        }\n    }\n}\n","import createElement from '../../../utils/createElement.js';\n\n\nconst REQUIRED_MARK_TEXT = ' *';\n\n\nexport default class RadioComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config;\n\n        this.wrapper = null;\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['radio'],\n        });\n\n        if (this.#config.label) {\n            const label = createElement({\n                tag: 'label',\n                text: this.#config.label,\n                parent: this.wrapper,\n                classes: ['input__label'],\n            });\n\n            if (this.#config.showRequired === true) {\n                createElement({\n                    tag: 'span',\n                    text: REQUIRED_MARK_TEXT,\n                    parent: label,\n                    classes: ['input__required'],\n                });\n            }\n        }\n\n        const choicesWrapper = createElement({\n            parent: this.wrapper,\n            classes: ['radio__choices'],\n        });\n\n        for (const key in this.#config.radios) {\n            const radioData = this.#config.radios[key];\n\n            const choice = createElement({\n                parent: choicesWrapper,\n                classes: ['radio__choice'],\n            });\n\n            const input = createElement({\n                tag: 'input',\n                parent: choice,\n                attrs: {\n                    type: 'radio',\n                    name: this.#config.name,\n                    value: radioData.value,\n                    id: radioData.id,\n                },\n                classes: ['radio__input'],\n            });\n\n            choice.addEventListener('click', () => input.checked = true);\n\n            if (this.#config.required) {\n                input.setAttribute('required', '');\n            }\n\n            createElement({\n                tag: 'label',\n                text: radioData.label,\n                parent: choice,\n                attrs: {\n                    for: radioData.id,\n                },\n            });\n        }\n    }\n\n    addListener(listener) {\n        this.wrapper.addEventListener('change', listener);\n    }\n\n    isValid() {\n        if (!this) return false;\n        return this.getChecked() !== null;\n    }\n\n    get required() {\n        return this.#config.required;\n    }\n\n    get value() {\n        return this.getChecked().value.trim();\n    }\n\n    get name() {\n        return this.#config.name?.trim();\n    }\n\n    getChecked() {\n        return this.wrapper.querySelector('.radio__input:checked');\n    }\n\n    setChecked(value) {\n        const radio = this.wrapper.querySelector(`.radio__input[value=\"${value}\"]`);\n        if (radio) radio.checked = true;\n    }\n}\n","import createElement from \"../../../utils/createElement.js\";\n\n\nconst DEFAULT_PLACEHOLDER = '';\nconst DEFAULT_TEXT = '';\nconst DEFAULT_NAME = '';\n\n\nexport default class TextareaComponent {\n    #parent\n    #config\n    constructor(parent, config) {\n        this.#parent = parent;\n        this.#config = config || {};\n\n        this.wrapper = null;\n        this.textarea = null;\n        this.render();\n    }\n\n    render() {\n        this.wrapper = createElement({\n            parent: this.#parent,\n            classes: ['textarea'],\n        });\n\n        if (this.#config.classes) {\n            this.#config.classes.forEach(className => this.wrapper.classList.add(className));\n        }\n\n        if (this.#config.label) {\n            createElement({\n                tag: 'label',\n                parent: this.wrapper,\n                text: this.#config.label,\n                classes: ['textarea__label'],\n            });\n        }\n\n        this.textarea = createElement({\n            tag: 'textarea',\n            parent: this.wrapper,\n            classes: ['textarea__field'],\n            attrs: {\n                placeholder: this.#config.placeholder || DEFAULT_PLACEHOLDER,\n                name: this.name || DEFAULT_NAME,\n            },\n            text: this.#config.value || DEFAULT_TEXT,\n        });\n\n        for (const attr in this.#config.attrs) {\n            this.textarea.setAttribute(attr, this.#config.attrs[attr]);\n        }\n    }\n\n    addListener(listener) {\n        this.textarea.addEventListener('input', listener);\n    }\n\n    get value() {\n        return this.textarea.value.trim();\n    }\n\n    get name() {\n        return this.#config.name?.trim();\n    }\n\n    isValid() {\n        if (!this.required) return true;\n        return this.textarea.value.trim() !== '';\n    }\n\n    isEmpty() {\n        return this.textarea.value.trim() === '';\n    }\n\n    get required() {\n        return this.#config.required;\n    }\n}\n","import Ajax from '../../modules/ajax.js';\n\nimport RadioMenuComponent from '../../Components/RadioMenuComponent/RadioMenuComponent.js';\nimport MainLayoutComponent from '../../Components/MainLayoutComponent/MainLayoutComponent.js';\nimport AvatarComponent from '../../Components/AvatarComponent/AvatarComponent.js';\nimport ButtonComponent from '../../Components/UI/ButtonComponent/ButtonComponent.js';\nimport InputComponent from '../../Components/UI/InputComponent/InputComponent.js';\nimport CoverComponent from '../../Components/CoverComponent/CoverComponent.js';\nimport FileInputComponent from '../../Components/UI/FileInputComponent/FileInputComponent.js';\n\nimport createElement from '../../utils/createElement.js';\nimport TextareaComponent from '../../Components/UI/TextareaComponent/TextareaComponent.js';\nimport { getLsItem } from '../../utils/localStorage.js';\nimport convertDate from '../../utils/convertDate.js';\nimport convertToFormData from '../../utils/convertToFormData.js';\n\n\nconst forms = {\n    profile: {\n        header: true,\n        fields: [\n            [{\n                key: 'username',\n                config: {\n                    label: 'Имя пользователя',\n                    validation: 'username',\n                    required: true\n                }\n            }],\n            [{\n                key: 'firstname',\n                config: {\n                    label: 'Имя',\n                    validation: 'name',\n                    required: true\n                }\n            },\n            {\n                key: 'lastname',\n                config: {\n                    label: 'Фамилия',\n                    validation: 'name',\n                    required: true\n                }\n            },\n            {\n                key: 'birth_date',\n                config: {\n                    label: 'Дата рождения',\n                    validation: 'date',\n                    autocomplete: 'date',\n                    placeholder: 'дд.мм.гггг',\n                    required: true\n                }\n            }],\n            [{\n                key: 'bio',\n                type: 'textarea',\n                config: {\n                    label: 'Краткая информация',\n                    placeholder: 'Расскажите о себе'\n                }\n            }]\n        ]\n    },\n    contacts: {\n        title: 'Контакты',\n        fields: [\n            [{\n                key: 'city',\n                config: {\n                    label: 'Город',\n                }\n            }],\n            [{\n                key: 'phone',\n                config: {\n                    label: 'Телефон',\n                    maxLength: 11,\n                }\n            },\n            {\n                key: 'email',\n                config: {\n                    label: 'Почта',\n                    validation: 'email',\n                }\n            }]\n        ]\n    },\n    education: {\n        title: 'Образование',\n        fields: [\n            [{\n                key: 'school_city',\n                config: {\n                    label: 'Город',\n                }\n            },\n            {\n                key: 'school_name',\n                config: {\n                    label: 'Школа',\n                }\n            }],\n            [{\n                key: 'univ_city',\n                config: {\n                    label: 'Город',\n                }\n            },\n            {\n                key: 'univ_name',\n                config: {\n                    label: 'Высшее учебное заведение',\n                }\n            },\n            {\n                key: 'faculty',\n                config: {\n                    label: 'Факультет',\n                }\n            },\n            {\n                key: 'grad_year',\n                config: {\n                    label: 'Год выпуска',\n                    maxLength: 4,\n                }\n            }]\n        ]\n    }\n};\n\n\nexport default class EditProfileView {\n    #containerObj\n    #menu\n    #section\n    #userData\n    #stateUpdaters\n    constructor(containerObj, menu) {\n        this.#containerObj = containerObj;\n        this.#menu = menu;\n        \n        this.#userData = null;\n        this.#stateUpdaters = [];\n        this.#section = null;\n    }\n\n    render() {\n        this.#containerObj.clear();\n        this.#containerObj = new MainLayoutComponent({\n            type: 'feed',\n        });\n\n        new RadioMenuComponent(this.#containerObj.right, {\n            items: {\n                profile: {\n                    title: 'Профиль',\n                    onClick: () => this.renderSection('profile')\n                },\n                contacts: {\n                    title: 'Контакты',\n                    onClick: () => this.renderSection('contacts')\n                },\n                education: {\n                    title: 'Образование',\n                    onClick: () => this.renderSection('education')\n                },\n            }\n        });\n\n        this.renderSection('profile');\n    }\n\n    renderSection(sectionName) {\n        this.#section = sectionName;\n        this.#stateUpdaters = [];\n        const sectionData = forms[this.#section];\n        this.#containerObj.left.innerHTML = '';\n\n        Ajax.get({\n            url: `/profiles/${getLsItem('username', '')}`,\n            callback: (status, userData) => {\n                let isAuthorized = status === 200;\n    \n                if (!isAuthorized) {\n                    this.#menu.goToPage(this.#menu.menuElements.login);\n                    this.#menu.updateMenuVisibility(false);\n                    return;\n                }\n\n                this.#userData = userData;\n                if (sectionData.header) this.renderHeader();\n                this.renderForm(sectionData);\n            }\n        });\n    }\n\n    renderForm(sectionData) {\n        const fields = sectionData.fields;\n\n        const form = createElement({\n            parent: this.#containerObj.left,\n            tag: 'form',\n            classes: ['profile_edit__form']\n        });\n\n        if (sectionData.title) {\n            createElement({\n                parent: form,\n                tag: 'h1',\n                text: sectionData.title\n            });\n        }\n\n        const formFields = createElement({\n            parent: form,\n            classes: ['profile_edit__fields']\n        });\n\n        for (let i = 0; i < fields.length; i++) {\n            const fieldset = fields[i];\n\n            const fieldsetElement = createElement({\n                parent: formFields,\n                tag: 'fieldset',\n                classes: ['profile_edit__fieldset'],\n            });\n        \n            for (const field of fieldset) {\n                field.config.classes = ['profile_edit__field'];\n                // field.type === 'textarea' ? field.config.classes.push('modal-textarea') : null;\n\n                field.config.name = field.key;\n                field.config.placeholder = field.config.placeholder || field.config.label;\n                field.config.value = \n                    this.#userData?.profile?.[field.key] ?? \n                    this.#userData?.contact_info?.[field.key] ?? \n                    this.#userData?.school?.[field.key] ?? \n                    this.#userData?.university?.[field.key];\n\n                if (field.config.name === 'birth_date') {\n                    field.config.value = convertDate(field.config.value);\n                }\n\n                this.#stateUpdaters.push(\n                    field.type === 'textarea' ?\n                    new TextareaComponent(fieldsetElement, field.config) :\n                    new InputComponent(fieldsetElement, field.config)\n                );\n            }\n        \n            if (i < fields.length - 1) {\n                createElement({\n                    parent: formFields,\n                    classes: ['modal__divider'],\n                });\n            }\n        }\n        \n        new ButtonComponent(form, {\n            text: 'Сохранить',\n            variant: 'primary',\n            size: 'large',\n            classes: ['profile_edit__btn'],\n            onClick: () => this.handleFormSubmit(),\n            disabled: true,\n            stateUpdaters: this.#stateUpdaters,\n        });\n    }\n\n    handleFormSubmit() {\n        const body = {};\n\n        this.#stateUpdaters.forEach(({ name, value }) => {\n            if (name === 'birth_date') value = convertDate(value, 'ts');\n            const sections = {\n                profile: () => {\n                    body.profile ??= {};\n                    body.profile[name] = value;\n                },\n                contacts: () => {\n                    body.contact_info ??= {};\n                    body.contact_info[name] = value;\n                },\n                education: () => {\n                    const key = name.startsWith('school') ? 'school_education' : 'university_education';\n                    body[key] ??= {};\n                    body[key][name] = name === 'grad_year' ? Number(value) : value;\n                }\n            };\n            sections[this.#section]?.();\n        })\n\n        if (body.contact_info) body.contact_info = JSON.stringify(body.contact_info);\n        if (body.school) body.school = JSON.stringify(body.school);\n        if (body.university) body.university = JSON.stringify(body.university);\n\n        for (const key in this.#userData) {\n            if (!body[key] || body[key].length === 0) {\n                if (typeof this.#userData[key] === 'object') {\n                    body[key] = JSON.stringify(this.#userData[key]);\n                } else {\n                    body[key] = this.#userData[key];\n                }\n            }\n        }\n\n        if (!body['cover_url']) body['cover_url'] = '';\n        if (!body['avatar_url']) body['avatar_url'] = '';\n\n        console.log(body);\n\n        const fd = convertToFormData(body);\n\n        Ajax.post({\n            url: '/profile',\n            body: fd,\n            isFormData: true,\n            callback: (status) => {\n                let isAuthorized = status === 200;\n\n                if (!isAuthorized) {\n                    this.#menu.goToPage(this.#menu.menuElements.login);\n                    this.#menu.updateMenuVisibility(false);\n                    return;\n                }\n\n                this.render();\n            }\n        });\n    }\n\n    renderHeader() {\n        const profileHeader = createElement({\n            parent: this.#containerObj.left,\n            classes: ['profile', 'profile_edit']\n        });\n\n        const cover = new CoverComponent(profileHeader, {\n            src: this.#userData.profile.cover_url,\n            type: 'edit',\n        });\n\n        this.#stateUpdaters.push(cover.fileInput);\n\n        const avatar = new AvatarComponent(profileHeader, {\n            size: 'xxl',\n            src: this.#userData.profile.avatar_url,\n            type: 'edit'\n        });\n\n        this.#stateUpdaters.push(\n            new FileInputComponent(this.#containerObj.left, {\n                imitator: avatar.wrapper,\n                preview: avatar.avatar,\n                id: 'profile-avatar-upload',\n                name: 'avatar_url',\n            })\n        );\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport PostComponent from '../../Components/PostComponent/PostComponent.js';\nimport ModalWindowComponent from '../../Components/UI/ModalWindowComponent/ModalWindowComponent.js';\nimport MainLayoutComponent from '../../Components/MainLayoutComponent/MainLayoutComponent.js';\nimport RadioMenuComponent from '../../Components/RadioMenuComponent/RadioMenuComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nconst POSTS_COUNT = 10;\n\n\nexport default class FeedView {\n    constructor(menu) {\n        this.menu = menu;\n    }\n\n    render() {\n        const containerObj = new MainLayoutComponent({\n            type: 'feed',\n        });\n\n        new RadioMenuComponent(containerObj.right, {\n            items: {\n                feed: {\n                    title: 'Лента',\n                    // onClick: () => this.renderSection('profile')\n                },\n                recommendations: {\n                    title: 'Рекомендации',\n                    // onClick: () => this.renderSection('contacts')\n                },\n                comments: {\n                    title: 'Комментарии',\n                    // onClick: () => this.renderSection('education')\n                },\n                reactions: {\n                    title: 'Реакции',\n                    // onClick: () => this.renderSection('education')\n                },\n            }\n        });\n\n        const createPostBtn = createElement({\n            parent: containerObj.left,\n            tag: 'button',\n            classes: ['button_feed']\n        });\n        createElement({\n            parent: createPostBtn,\n            tag: 'div',\n            classes: ['button_feed__icon']\n        });\n        createElement({\n            parent: createPostBtn,\n            text: 'Создать пост',\n        });\n\n        const postsWrapper = createElement({\n            parent: containerObj.left,\n            classes: ['feed__posts'],\n        });\n\n        createPostBtn.addEventListener('click', () => {\n            new ModalWindowComponent(containerObj.container, {\n                type: 'create-post',\n            });\n        });\n\n        Ajax.get({\n            url: '/feed',\n            params: { posts_count: POSTS_COUNT },\n            callback: (status, feedData) => {\n                let isAuthorized = status === 200;\n\n                if (!isAuthorized) {\n                    this.menu.goToPage(this.menu.menuElements.login);\n                    this.menu.updateMenuVisibility(false);\n                    return;\n                }\n\n                if (feedData && Array.isArray(feedData)) {\n                    feedData.forEach((config) => {\n                        new PostComponent(postsWrapper, config);\n                    });\n                }\n            }\n        });\n\n        // // Обработчик лайков на постах\n        // feed.addEventListener('click', (event) => {\n        //     if (event.target.tagName.toLowerCase() === 'button' && event.target.dataset.imageId) {\n        //         const { imageId: id } = event.target.dataset;\n\n        //         Ajax.post({\n        //             url: '/like',\n        //             body: { id },\n        //             callback: (status) => {\n        //                 if (status === 200) {\n        //                     const likeContainer = event.target.parentNode;\n        //                     const likeCount = likeContainer.querySelector('span');\n        //                     likeCount.textContent = `${parseInt(likeCount.textContent) + 1} лайков`;\n        //                 } else if (status === 500) {\n        //                     // TODO: дописать обработку ошибки + ретрай\n        //                 }\n        //             }\n        //         });\n        //     }\n        // });\n\n        return containerObj.container;\n    }\n}\n","import LoginFormComponent from '../../Components/LoginFormComponent/LoginFormComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nexport default class LoginView {\n    constructor(menu, header) {\n        this.menu = menu;\n        this.header = header;\n\n        this.formWrapper = null;\n    }\n\n    render() {\n        this.formWrapper = createElement({});\n        new LoginFormComponent(this.formWrapper, this.menu, this.header);\n\n        return this.formWrapper;\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport createElement from '../../utils/createElement.js';\n\n\nexport default class LogoutView {\n    constructor(menu) {\n        this.menu = menu;\n    }\n\n    render() {\n        Ajax.post({\n            url: '/logout',\n            callback: (status) => {\n                let isUnauthorized = status === 200;\n                this.menu.goToPage(!isUnauthorized ? this.menu.menuElements.feed : this.menu.menuElements.login);\n            }\n        });\n    \n        return createElement({});\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport MessengerComponent from '../../Components/MessengerComponent/MessengerComponent.js';\nimport MainLayoutComponent from '../../Components/MainLayoutComponent/MainLayoutComponent.js';\nimport { getLsItem } from '../../utils/localStorage.js';\n\n\nexport default class MessengerView {\n    #containerObj\n    #menu\n    constructor(menu) {\n        this.#menu = menu;\n        this.#containerObj = null;\n    }\n\n    render() {\n        this.#containerObj = new MainLayoutComponent({\n            type: 'messenger',\n        });\n\n        Ajax.get({\n            url: `/profiles/${getLsItem('username', '')}`,\n            callback: (status, userData) => {\n                let isAuthorized = status === 200;\n        \n                if (!isAuthorized) {\n                    this.#menu.goToPage(this.#menu.menuElements.login);\n                    this.#menu.updateMenuVisibility(false);\n                    return;\n                }\n        \n                new MessengerComponent(this.#containerObj, {\n                    user: userData,\n                    menu: this.#menu,\n                });\n            }\n        });\n\n        return this.#containerObj.container;\n    }\n}\n","import Ajax from '../../modules/ajax.js';\nimport EditProfileView from '../EditProfileView/EditProfileView.js';\nimport PostComponent from '../../Components/PostComponent/PostComponent.js';\nimport MainLayoutComponent from '../../Components/MainLayoutComponent/MainLayoutComponent.js';\nimport AvatarComponent from '../../Components/AvatarComponent/AvatarComponent.js';\nimport ModalWindowComponent from '../../Components/UI/ModalWindowComponent/ModalWindowComponent.js';\nimport ButtonComponent from '../../Components/UI/ButtonComponent/ButtonComponent.js';\nimport createElement from '../../utils/createElement.js';\nimport { profileFriends } from '../../mocks.js';\nimport { getLsItem } from '../../utils/localStorage.js';\nimport CoverComponent from '../../Components/CoverComponent/CoverComponent.js';\n\n\nconst POSTS_COUNT = 10;\n\nexport const profileDataLayout = {\n    username: {icon: 'at'},\n    birth_date: {icon: 'gift'},\n\n    city: {icon: 'location'},\n    email: {icon: 'envelope'},\n    phone: {icon: 'phone'},\n\n    school_city: {icon: \"location\"},\n    school_name: {icon: \"diploma\"},\n\n    univ_city: {icon: \"location\"},\n    univ_name: {icon: \"diploma\"},\n    faculty: {icon: \"diploma\"},\n    grad_year: {icon: \"diploma\"},\n\n    friends: {text: 'друзей'},\n    subscribers: {text: 'подписчиков'},\n    subscribes: {text: 'подписок'},\n\n    more: {\n        icon: 'info',\n        text: 'Подробнее',\n    }\n};\n\n\nexport default class ProfileView {\n    #menu\n    #containerObj\n    constructor(menu) {\n        this.#menu = menu;\n        this.#containerObj = null;\n    }\n\n    render() {\n        this.#containerObj = new MainLayoutComponent({\n            type: 'profile',\n        });\n\n        Ajax.get({\n            url: `/profiles/${getLsItem('username', '')}`,\n            callback: (status, userData) => {\n                let isAuthorized = status === 200;\n    \n                if (!isAuthorized) {\n                    this.#menu.goToPage(this.#menu.menuElements.login);\n                    this.#menu.updateMenuVisibility(false);\n                    return;\n                }\n\n                this.renderProfileInfo(userData);\n            }\n        });\n\n        this.renderFeed();\n\n        const friends = profileFriends; // TODO: надо дергать метод\n        this.renderFriends(friends);\n\n        return this.#containerObj.container;\n    }\n\n    renderFriends(friends) {\n        const friendsWrapper = createElement({\n            parent: this.#containerObj.right,\n            classes: ['profile__friends'],\n        });\n\n        const top = createElement({\n            parent: friendsWrapper,\n            classes: ['profile__friends-header'],\n        });\n\n        createElement({\n            parent: top,\n            text: 'Друзья',\n        });\n\n        createElement({\n            parent: top,\n            text: '165',\n            classes: ['profile__friends-count'],\n        });\n\n        const profileFriends = createElement({\n            parent: friendsWrapper,\n            classes: ['profile__friends-inner'],\n        });\n\n        friends.forEach(({ name, avatar }) => {\n            const friend = createElement({\n                parent: profileFriends,\n                classes: ['profile__friend'],\n            });\n\n            new AvatarComponent(friend, {\n                size: 'xl',\n                src: avatar,\n            });\n\n            createElement({\n                parent: friend,\n                text: name,\n            });\n        });\n    }\n\n    renderFeed() {\n        const createPostBtn = createElement({\n            parent: this.#containerObj.left,\n            tag: 'button',\n            classes: ['button_feed']\n        });\n        createElement({\n            parent: createPostBtn,\n            tag: 'div',\n            classes: ['button_feed__icon']\n        });\n        createElement({\n            parent: createPostBtn,\n            text: 'Создать пост',\n        });\n\n        createPostBtn.addEventListener('click', () => {\n            new ModalWindowComponent(this.#containerObj.container, {\n                type: 'create-post',\n            });\n        });\n\n        Ajax.get({\n            url: '/feed',\n            params: { posts_count: POSTS_COUNT },\n            callback: (status, feedData) => {\n                this.feedCallback(status, feedData);\n            }\n        });\n    }\n\n    feedCallback(status, feedData) {\n        let isAuthorized = status === 200;\n\n        if (!isAuthorized) {\n            this.#menu.goToPage(this.#menu.menuElements.login);\n            this.#menu.updateMenuVisibility(false);\n            return;\n        }\n\n        const postsWrapper = createElement({\n            parent: this.#containerObj.left,\n            classes: ['feed__posts']\n        });\n\n        if (feedData && Array.isArray(feedData)) {\n            feedData.forEach((config) => {\n                new PostComponent(postsWrapper, config);\n            });\n        }\n    }\n\n    renderProfileInfo(data) { \n        const profileHeader = createElement({\n            parent: this.#containerObj.top,\n            classes: ['profile']\n        });\n\n        new CoverComponent(profileHeader, {\n            src: data.profile.cover_url,\n            type: 'profile',\n        });\n\n        new AvatarComponent(profileHeader, {\n            size: 'xxxl',\n            class: 'profile__avatar',\n            type: 'status',\n            src: data.profile.avatar_url,\n        });\n\n        const profileBottom = createElement({\n            parent: profileHeader,\n            classes: ['profile__content'],\n        });\n\n        const profileInfo = createElement({\n            parent: profileBottom,\n            classes: ['profile__info']\n        });\n\n        createElement({\n            parent: profileInfo,\n            text: `${data.profile.firstname} ${data.profile.lastname}`,\n            classes: ['profile__name']\n        });\n\n        const fullInfo = createElement({\n            parent: profileInfo,\n            classes: ['profile__details']\n        });\n\n        this.createInfoItem(fullInfo, profileDataLayout['username'].icon, data.profile.username);\n\n        const moreInfo = this.createInfoItem(fullInfo, profileDataLayout['more'].icon, profileDataLayout['more'].text);\n        moreInfo.classList.add('profile__detail_more');\n\n        moreInfo.addEventListener('click', () => {\n            new ModalWindowComponent(this.#containerObj.container, {\n                type: 'profile-full-info',\n                data,\n                createInfoItem: this.createInfoItem,\n                createCountedItem: this.createCountedItem\n            })\n        });\n\n        const profileActions = createElement({ parent: profileBottom });\n\n        new ButtonComponent(profileActions, {\n            text: 'Редактировать профиль',\n            variant: 'secondary',\n            size: 'small',\n            onClick: () => new EditProfileView(this.#containerObj, this.#menu).render(),\n        });\n    }\n\n    createCountedItem(parent, title, value) {\n        const item = createElement({\n            parent,\n            classes: ['modal__item-counted']\n        });\n        createElement({\n            parent: item,\n            text: value,\n            classes: ['modal__count'],\n        });\n        createElement({\n            parent: item,\n            text: title\n        });\n\n        return item;\n    }\n\n    createInfoItem(parent, icon, value) {\n        const item = createElement({\n            parent,\n            classes: ['profile__detail']\n        });\n        createElement({\n            parent: item,\n            classes: ['profile__icon'],\n            attrs: {src: `/static/img/${icon}-icon.svg`}\n        });\n        createElement({\n            parent: item,\n            text: value\n        });\n\n        return item;\n    }\n}\n","import SignupFormComponent from '../../Components/SignupFormComponent/SignupFormComponent.js';\nimport createElement from '../../utils/createElement.js';\n\n\nexport default class SignupView {\n    constructor(menu, header) {\n        this.menu = menu;\n        this.header = header;\n\n        this.formWrapper = null;\n    }\n\n    render() {\n        this.formWrapper = createElement({});\n        new SignupFormComponent(this.formWrapper, this.menu, this.header);\n\n        return this.formWrapper;\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","export const posts = [\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: 'Аԥсны (Абхазия) в переводе с абхазского — \"страна души\". И действительно, поездка туда впечаталась в душу и стала испытанием для тела: пока это наше единственное путешествие, где мы три дня не мылись, купались в море с коровами, все время от чего-нибудь лечились, шарахались от машин на переходах и от собак в подворотнях, сгоняли кошек со стульев в кафе и вырывали наших детей из рук прохожих. Но поскольку мы все же благополучно вернулись домой, я могу обо всем подробнейшим образом написать здесь (от души, так скажем). Сейчас — вводный пост, потом будет весь наш маршрут поэтапно, а в конце моих путевых заметок подведем итоги по стоимости поездки.',\n        pics: [\n            \"/posts/IMG_6776.jpg\",\n            \"/posts/273153700_118738253861831_5906416883131394354_n.jpeg\",\n            \"/posts/272708814_1158833634855293_1743973316352152210_n.webp.jpg\",\n            \"/posts/272464515_147005761018515_3100264353239753904_n.webp.jpg\",\n            \"/posts/259096143_252774593424446_3292295880799640700_n.jpeg\",\n            \"/posts/19984805_468099790230913_7469029070697660416_n.jpeg\",\n            \"/posts/16583858_168051673696142_846500378588479488_n.jpeg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: \"Hello, this is my first post\",\n        pics: [\n            \"https://quickflowapp.ru/images/image1.jpg\",\n            \"https://quickflowapp.ru/images/image2.jpg\",\n            \"https://quickflowapp.ru/images/image3.jpg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: \"Hello, this is my first post\",\n        pics: [\n            \"/posts/272464515_147005761018515_3100264353239753904_n.webp.jpg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: \"Hello, this is my first post\",\n        pics: [\n            \"/posts/259096143_252774593424446_3292295880799640700_n.jpeg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: \"Hello, this is my first post\",\n        pics: [\n            \"/posts/19984805_468099790230913_7469029070697660416_n.jpeg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n    {\n        firstname: 'Илья',\n        lastname: 'Мациевский',\n        avatar: '/avatars/avatar.jpg',\n        id: \"1674ca65-83dc-4dd7-a5ca-adc0298b54a3\",\n        creator_id: \"9c5a7aff-c703-4b11-a5ca-d45833091c90\",\n        text: \"Hello, this is my first post\",\n        pics: [\n            \"/posts/16583858_168051673696142_846500378588479488_n.jpeg\",\n        ],\n        created_at: \"2005-05-02\",\n        like_count: 0,\n        repost_count: 0,\n        comment_count: 0\n    },\n];\n\nexport const users = {\n    rvasutenko: {\n        profile: {\n            username: \"rvasutenko\",\n            password: 'Qwerty1!', // Нужен на тестовом серваке для авторизации\n            firstname: \"Роман\",\n            lastname: \"Васютенко\",\n            sex: 0,\n            birth_date: \"2005-05-02\",\n            bio: \"Тут пара слов обо мне, моих увлечениях, занятиях и предпочтениях\",\n            avatar_url: \"/avatars/avatar.jpg\",\n            cover_url: \"/covers/profile-header.jpg\",\n        },\n        contact_info: {\n            city: \"Moscow\",\n            email: \"vasyutenko20050205@mail.ru\",\n            phone: \"89648826455\"\n        },\n        school: {\n            school_city: \"Ахтубинск\",\n            school_name: \"МБОУ СОШ №4\"\n        },\n        university: {\n            univ_city: \"Москва\",\n            univ_name: \"МГТУ им. Н.Э. Баумана\",\n            faculty: \"Социальные и гуманитарные науки\",\n            grad_year: 2027\n        }\n    }    \n};\n\nexport const profileFriends = [\n    {\n        name: 'Андрей',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Максим',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Ольга',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Анатолий',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Анна',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Лилия',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Максим',\n        avatar: '/avatars/avatar.jpg'\n    },\n    {\n        name: 'Ольга',\n        avatar: '/avatars/avatar.jpg'\n    },\n];\n\nexport const chats = {\n    rvasutenko: [\n        {\n            username: 'pavlov',\n            name: 'Александр Павловский',\n            avatar: '/avatars/avatar4.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч', // TODO: убрать хардкод и поменть на timestamp\n        },\n        {\n            username: 'andrew',\n            name: 'Андрей Контемиров',\n            avatar: '/avatars/avatar5.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'maxutka',\n            name: 'Максим Поздняков',\n            avatar: '/avatars/avatar6.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'matthew',\n            name: 'Матвей Хаметов',\n            avatar: '/avatars/avatar7.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'nik_vor',\n            name: 'Никита Воробьев',\n            avatar: '/avatars/avatar8.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'baran2003',\n            name: 'Анастасия Баранникова',\n            avatar: '/avatars/avatar9.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'olchik',\n            name: 'Ольга Склярова',\n            avatar: '/avatars/avatar10.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'vlli',\n            name: 'Влад Ли',\n            avatar: '/avatars/avatar11.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'tolly_molly',\n            name: 'Ксения Сивашова',\n            avatar: '/avatars/avatar4.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'braznetz',\n            name: 'Eugenii Braznetz',\n            avatar: '/avatars/avatar5.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'xusha',\n            name: 'Ксюша Логинова',\n            avatar: '/avatars/avatar6.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n        {\n            username: 'kate_b',\n            name: 'Катя Беседовская',\n            avatar: '/avatars/avatar7.jpg',\n            lastMsg: 'Привет, как дела?',\n            lastMsgTime: '1ч',\n        },\n    ]\n};\n\nexport const messages = {\n    rvasutenko: {\n        pavlov: [\n            {\n                id: 1,\n                from: 'pavlov',\n                text: 'Привет, как дела?',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 2,\n                from: 'pavlov',\n                text: 'Что нового произошло за неделю?',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 3,\n                from: 'rvasutenko',\n                text: 'Привет, все отлично',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 4,\n                from: 'rvasutenko',\n                text: 'На днях ходил на новую выставку в винзаводе',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 5,\n                from: 'rvasutenko',\n                text: 'Очень классная, так что советую',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 6,\n                from: 'rvasutenko',\n                text: 'Сам то ты как?',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 7,\n                from: 'pavlov',\n                text: 'Да у меня тоже все хорошо. Завтра поеду в Казань с одногруппниками. Давно собирались сгонять своей компанией, но все никак не могли спланировать нормально. Вот, наконец-то руки добрались, хахах',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 8,\n                from: 'rvasutenko',\n                text: 'О, Казань - это классно, нереально красивый город',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 9,\n                from: 'rvasutenko',\n                text: 'Расскажешь потом, как съездили',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 10,\n                from: 'pavlov',\n                text: 'Да, окей',\n                timestamp: '2025-03-28 22:00:00',\n                isRead: true\n            },\n            {\n                id: 11,\n                from: 'pavlov',\n                text: 'Слушай, я давно хотел у тебя спросить что-то очень важное, но вот, к сожалению, сейчас никак не могу припомнить, что именно. Знаешь, я, наверное, тебе напишу чуть позже, как вспомню) Привет! Давно хотел у тебя спросить что-то очень важное, но вот, к сожалению, сейчас никак не могу припомнить, что именно. Знаешь, я, наверное, тебе напишу чуть позже, как вспомню)',\n                timestamp: '2025-03-29 22:00:00',\n                isRead: true\n            },\n        ],\n        andrew: [],\n        maxutka: [],\n        matthew: [],\n        nik_vor: [],\n        baran2003: [],\n        olchik: [],\n        vlli: [],\n        tolly_molly: [],\n        braznetz: [],\n        xusha: [],\n        kate_b: [],\n    }\n};","import { users, chats, messages } from '../mocks.js'\n\n\nconst HTTP_METHOD_GET = 'GET';\nconst HTTP_METHOD_POST = 'POST';\nconst API_BASE_URL = 'https://quickflowapp.ru/api';\nconst CSRF_FREE_URLS = [\n    '/login',\n    '/signup',\n    '/logout'\n];\n\n\nclass Ajax {\n    constructor() {\n        this.develop = true;\n        this.baseUrl = this.detectEnvironment();\n    }\n\n    detectEnvironment() {\n        if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {\n            return '';\n        }\n        this.develop = false;\n        return API_BASE_URL;\n    }\n\n    async csrfRequest() {\n        let csrfToken = null;\n\n        if (!this.develop) {\n            const csrfResponse = await fetch(`${this.baseUrl}/csrf`, {\n                method: HTTP_METHOD_GET,\n                credentials: 'include'\n            });\n            console.log(csrfResponse.headers);\n\n            console.log(csrfResponse.headers.get('X-CSRF-Token'));\n            console.log(csrfResponse.headers.get('X-Csrf-Token'));\n            console.log(csrfResponse.headers.get('x-csrf-token'));\n\n            csrfToken = csrfResponse.headers.get('X-CSRF-Token');\n\n            await fetch(`${this.baseUrl}/csrf`, {\n                method: HTTP_METHOD_GET,\n                credentials: 'include'\n            }).then(res => console.log(res.headers));\n        }\n\n        return csrfToken;\n    }\n\n    async fakeRequest(url, params, callback) {\n        await new Promise(resolve => setTimeout(resolve, 30)); // Симуляция сетевой задержки\n        if (!this.develop) {\n            if (url === '/user') {\n                callback(200, users['rvasutenko']);\n                return true;\n            } else if (url === '/chats') {\n                callback(200, chats['rvasutenko']);\n                return true;\n            } else if (url === '/chat') {\n                callback(200, messages['rvasutenko'][params.username]);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async get({ url, params = {}, callback = () => {} }) {\n        try {\n            if (await this.fakeRequest(url, params, callback)) return;\n            if (url === '/user-dev-false') url = '/feed';\n\n            const queryString = new URLSearchParams(params).toString();\n            const fullUrl = `${this.baseUrl}${url}${queryString ? `?${queryString}` : ''}`;\n    \n            const response = await fetch(fullUrl, {\n                method: HTTP_METHOD_GET,\n                credentials: 'include'\n            });\n    \n            let data = null;\n            if (response.headers.get('content-length') !== '0' && response.headers.get('content-type')?.includes('application/json')) {\n                data = await response.json();\n            }\n\n            callback(response.status, data);\n        } catch (error) {\n            console.error('GET request failed:', error);\n        }\n    }\n\n    async post({ url, body = {}, isFormData = false, callback = () => {} }) {\n        let response;\n        try {\n            const headers = {};\n            if (!isFormData) headers['Content-Type'] = 'application/json; charset=utf-8';\n            if (!CSRF_FREE_URLS.includes(url)) {\n                headers['X-CSRF-Token'] = await this.csrfRequest() || '';\n            }\n            console.log(headers);\n\n            const options = {\n                method: HTTP_METHOD_POST,\n                credentials: 'include',\n                body: isFormData ? body : JSON.stringify(body),\n                headers\n            };\n\n            response = await fetch(`${this.baseUrl}${url}`, options);\n    \n            let data = null;\n            if (\n                response.headers.get('content-length') !== '0' &&\n                response.headers.get('content-type')?.includes('application/json')\n            ) {\n                data = await response.json();\n            }\n    \n            callback(response.status, data);\n        } catch (error) {\n            console.error('POST request failed:', error);\n            callback(response?.status || 500);\n        }\n    }\n    \n}\n\nexport default new Ajax();","export default function convertDate(date, mode = 'tu') {\n    const parts = date.split(\n        mode === 'ts' ? '.' : '-',\n    );\n    if (mode === 'ts') {\n        const day = parts[0];\n        const month = parts[1];\n        const year = parts[2];\n        return `${year}-${month}-${day}`;\n    }\n    const day = parts[2];\n    const month = parts[1];\n    const year = parts[0];\n    return `${day}.${month}.${year}`;\n}","export default function convertToFormData(obj, fd = new FormData(), prevKey = null) {\n    if (!obj || typeof obj !== 'object') return fd;\n\n    Object.entries(obj).forEach(([key, value]) => {\n        const fieldName = prevKey ? `${prevKey}[${key}]` : key;\n        if (value && typeof value === 'object' && !(value instanceof File || value instanceof Date)) {\n            convertToFormData(value, fd, fieldName);\n        } else {\n            fd.append(fieldName, value ?? '');\n        }\n    });\n\n    return fd;\n}","export default function createElement({\n    parent = null,\n    attrs = {},\n    tag = attrs.src ? 'img' : 'div',\n    classes = [],\n    text = '',\n} = {}) {\n    const element = document.createElement(tag);\n\n    for (const attr in attrs) {\n        element.setAttribute(attr, attrs[attr]);\n    }\n\n    const _classes =  Array.from(classes);\n    if (_classes.length) element.classList.add(..._classes);\n\n    element.textContent = text;\n\n    if (parent) {\n        parent.appendChild(element);\n    }\n\n    return element;\n}\n","export default function focusInput(input, focusTimer = null) {    \n    clearFocusTimer(focusTimer);\n    \n    focusTimer = setTimeout(() => input.focus(), 0);\n    input.setSelectionRange(input.value.length, input.value.length);\n}\n\nfunction clearFocusTimer(focusTimer) {\n    if (!focusTimer) return;\n    \n    clearTimeout(focusTimer);\n    focusTimer = null;\n}","export default function formatDateInput(input) {\n    let value = input.value.replace(/\\D/g, '');\n\n    if (value.length > 8) {\n        value = value.slice(0, 8);\n    }\n\n    if (value.length > 2 && value[2] !== '.') {\n        value = value.slice(0, 2) + '.' + value.slice(2);\n    }\n    if (value.length > 5 && value[5] !== '.') {\n        value = value.slice(0, 5) + '.' + value.slice(5);\n    }\n\n    input.value = value;\n}","export default function formatTimeAgo(dateString) {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInSeconds = Math.floor((now - date) / 1000);\n    \n    if (diffInSeconds < 60) {\n        return `${diffInSeconds} секунд${getEnding(diffInSeconds)} назад`;\n    }\n\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\n    if (diffInMinutes < 60) {\n        return `${diffInMinutes} минут${getEnding(diffInMinutes)} назад`;\n    }\n\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) {\n        return diffInHours === 1 ? '1 час назад' : `${diffInHours} часов назад`;\n    }\n\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays === 1) {\n        return 'Вчера';\n    }\n    if (diffInDays < 7) {\n        return `${diffInDays} дней назад`;\n    }\n\n    const options = { day: 'numeric', month: 'long' };\n    return date.toLocaleDateString('ru-RU', options);\n}\n\nfunction getEnding(number) {\n    const lastDigit = number % 10;\n    const lastTwoDigits = number % 100;\n\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {\n        return '';\n    }\n\n    if (lastDigit === 1) {\n        return 'у';\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return 'ы';\n    }\n\n    return '';\n}","export function setLsItem(key, value) {\n    try {\n        localStorage.setItem(key, value);\n    } catch {\n        console.log('setLsItem exception');\n    }\n}\n\nexport function getLsItem(key, defaultValue) {\n    let value = defaultValue;\n\n    try {\n        value = localStorage.getItem(key) || defaultValue;\n    } catch {\n        value = defaultValue;\n    }\n\n    return value;\n}\n\nexport function removeLsItem(key) {\n    try {\n        localStorage.removeItem(key);\n    } catch {\n        console.log('removeLsItem exception');\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import LoginView from './Views/LoginView/LoginView.js';\nimport SignupView from './Views/SignupView/SignupView.js';\nimport FeedView from './Views/FeedView/FeedView.js';\nimport MessengerView from './Views/MessengerView/MessengerView.js';\nimport ProfileView from './Views/ProfileView/ProfileView.js';\nimport HeaderComponent from './Components/HeaderComponent/HeaderComponent.js';\nimport MenuComponent from './Components/MenuComponent/MenuComponent.js';\nimport createElement from './utils/createElement.js';\nimport Ajax from './modules/ajax.js';\nimport './index.scss';\n\n\nconst root = document.getElementById('root');\n\nconst container = createElement({\n    parent: root,\n    classes: ['container'],\n});\n\ncreateElement({\n    tag: 'main',\n    parent: container,\n    classes: ['main']\n});\n\nconst config = {\n    menu: {\n        profile: {\n            href: '/profile',\n            text: 'Профиль',\n            icon: 'profile-icon',\n            render: () => new ProfileView(menu).render(),\n        },\n        feed: {\n            href: '/feed',\n            text: 'Лента',\n            icon: 'feed-icon',\n            render: () => new FeedView(menu).render(),\n        },\n        login: {\n            href: '/login',\n            text: 'Авторизация',\n            icon: 'login-icon',\n            render: () => new LoginView(menu, header).render(),\n        },\n        signup: {\n            href: '/signup',\n            text: 'Регистрация',\n            icon: 'signup-icon',\n            render: () => new SignupView(menu, header).render(),\n        },\n        messenger: {\n            href: '/messenger',\n            text: 'Мессенджер',\n            icon: 'messenger-icon',\n            render: () => new MessengerView(menu).render(),\n        },\n    },\n    isAuthorized: true,\n};\n\nconst menu = new MenuComponent(container, config);\nconst header = new HeaderComponent(container, menu);\n\nAjax.get({\n    url: '/user-dev-false',\n    params: {\n        posts_count: 10\n    },\n\n    callback: (status) => {\n        let isAuthorized = status === 200;\n\n        if (!isAuthorized) {\n            menu.goToPage(menu.menuElements.login);\n            menu.updateMenuVisibility(false);\n            return;\n        }\n\n        menu.goToPage(menu.menuElements.messenger);\n    }\n});\n"],"names":[],"sourceRoot":""}